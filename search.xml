<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git 无法 Pull 仓库 显示 refusing to merge unrelated histories （拒绝合并不相关仓库）</title>
    <url>/posts/e5477819/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>如果在合并 pull 仓库的时候，出现的问题如何去解决（这个方法适用于合并本地很久没有提交的仓库，或者是同一个仓库 commit 信息不同的合并）</p>
<p><img src="../../media/article_img/git_connot_pull_repo/fail.png" alt="示意图"></p>
<p>如果合并了两个不同的开始提交的仓库，在新的 <code>git</code> 会发现这两个仓库可能不是同一个，为了防止开发者上传错误，于是就给下面的提示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fatal: refusing to merge unrelated histories</span><br></pre></td></tr></table></figure>
<p>如我在 GitHub 新建一个仓库，写了 License，然后把本地一个写了很久仓库上传。这时会发现 GitHub 的仓库和本地的没有一个共同的 <code>commit</code> 所以 <code>git</code> 不让提交，认为是写错了 <code>origin</code> ，如果开发者确定是这个 <code>origin</code> 就可以使用  <code>--allow-unrelated-histories</code>  告诉 <code>git</code> 自己确定</p>
<p>遇到无法提交的问题，一般先 Pull 也就是使用  <code>git pull origin master</code>  这里的 <code>origin</code> 就是仓库，而 <code>master</code> 就是需要上传的分支，因为两个仓库不同，发现 <code>git</code> 输出  <code>refusing to merge unrelated histories</code>  无法 <code>pull</code> 内容</p>
<p>因为他们是两个不同的项目，要把两个不同的项目合并，Git需要添加一句代码，在 <code>git pull</code> 之后，这句代码是在 <code>Git 2.9.2</code> 版本发生的，最新的版本需要添加 <code>--allow-unrelated-histories</code> 告诉 <code>git</code> 允许不相关历史合并</p>
<p>假如我们的源是 <code>origin</code>，分支是 <code>master</code>，那么我们需要这样写 <code>git pull origin master --allow-unrelated-histories</code>  如果有设置了默认上传分支就可以用下面代码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git pull --allow-unrelated-histories</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>修改 Windows 10 的用户名以及用户文件夹</title>
    <url>/posts/8e165a5c/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="note warning flat"><p>修改注册表有风险，操作需谨慎，注意备份重要文件</p>
</div>
<p>由于 Windows 10 的奇葩机制本地账户名是在线账户邮箱的前五位，导致我登录在线账户之后在本地显示的名称以及文件夹从我名字全拼的 <code>nihaocun</code> 变成了 <code>nihao</code>，虽然能忍，但是越看越不顺眼，就开始在网上找修改的方法。然而搜到的结果也大多不完整，好在还是能拼起来的，现在终于是改成功了。</p>
<div class="note info flat"><p>以下操作在 你的个人账户 完成</p>
</div>
<h2 id="开启-Administrator-账户">开启 Administrator 账户</h2>
<p>我们需要开启这个账户去修改注册表和文件夹名，家庭版用户请先升级到专业版，专业版用户打开
<code>控制面板</code> -&gt; <code>系统和安全</code> -&gt; <code>管理工具</code> -&gt; <code>计算机管理</code>，然后按图所示依次打开
<code>本地用户和组</code> -&gt; <code>用户</code> -&gt; <code>Administrator</code>，然后去掉 <code>账户已禁用</code> 前面的复选框即可。
<img src="../../media/article_img/modify_win10_username_userprofile/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%AE%A1%E7%90%86.png" alt="开启 Administrator 账户"></p>
<h2 id="修改用户名">修改用户名</h2>
<p>接着不关闭计算机管理，找到你需要修改的用户名，然后右键重命名即可，注意这里不能和计算机名重复（大小写不敏感）</p>
<div class="note info flat"><p>以下操作在 Administrator 完成</p>
</div>
<h2 id="修改注册表">修改注册表</h2>
<p>注销当前账户切换到 Administrator，按下 <code>Win + R</code> 打开命令窗口，输入 <code>regedit</code> 回车运行打开注册表编辑器。使用 <code>Ctrl + F</code> 搜索 <code>ProfileList</code> 或者手动定位到 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ProfileList</code> 这一项。在这里有很多 <code>S-1-5</code> 开头的项，依次检查会有一个 <code>ProfileListPath</code> 为 <code>C:\User\&lt;你的用户名&gt;</code> 这一项，双击修改即可。
<img src="../../media/article_img/modify_win10_username_userprofile/%E4%BF%AE%E6%94%B9%E6%B3%A8%E5%86%8C%E8%A1%A8.png" alt="修改注册表"></p>
<h2 id="修改文件夹名">修改文件夹名</h2>
<p>在文件管理器找到 <code>C:\User\&lt;你的用户名&gt;</code> 然后直接修改即可。</p>
<div class="note info flat"><p>以下操作在 你的个人账户 完成</p>
</div>
<h2 id="创建联接">创建联接</h2>
<p>现在回到原来的账户发现名字已经改了，而且原来的数据还在，不过部分环境变量以及应用配置可能会出问题，这里提供两个方法：</p>
<ul>
<li>一个一个修改路径保证不出错</li>
<li>创建一个联接
<blockquote>
<p>用管理员权限运行一个 CMD 窗口，然后输入 <code>MKLINK /J C:\Users\&lt;旧用户名&gt; C:\Users\&lt;新用户名&gt;</code>，这样不论访问 <code>C:\Users\&lt;旧用户名&gt;</code> 还是 <code>C:\Users\&lt;新用户名&gt;</code> 都会定位到 <code>C:\Users\&lt;新用户名&gt;</code>。出现下图这样就是成功了。
<img src="../../media/article_img/modify_win10_username_userprofile/%E9%93%BE%E6%8E%A5.png" alt="创建联接"></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>记一些 Hexo 报错</title>
    <url>/posts/b36c6159/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>说在前面：
这里主要是记一下平时在 Hexo 遇到的报错，解决之后分享一下解决方法</p>
</blockquote>
<h2 id="YAMLException-can-not-read-a-block-mapping-entry-a-multiline-key-may-not-be-an-implicit-key-at-line-6-column-1">YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 6, column 1</h2>
<p>解决方法：查看新建要上传的 MarkDown 文件，看看 tags 那里或者其他地方，与后面内容是不是有一个空格。我是排查空格之后就解决了。<s>好智障啊</s></p>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>踩坑</tag>
      </tags>
  </entry>
  <entry>
    <title>解决方案.方案</title>
    <url>/posts/notes/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>日常解决问题基本靠 Google，拿来水博客跟 <em>Copy&amp;Paste</em> 也没啥区别，但是又想把这些方法记录下来，万一以后需要用还方便查看，于是打算全部写在这一篇文章里了。</p>
<p>当然，为了防止未来的我忘记当时写的是什么东西，咱尽量将一些因人而异、因机而异的东西标注出来（比如每段的 Replacement），但难免有疏漏，如果有读者能够看到，并感到疑惑，请不要吝啬你的留言。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="引用自 [Buta Sticky Notes - 丁丁の店](https://blog.butanediol.me/2020/10/13/Buta-Sticky-Notes/)
">[1]</span></a></sup></p>
</blockquote>
<div class="note info flat"><p>因为我是用的是 Windows 10 系统所以一下的东西只保证在 Windows 10 有用其他系统，诸如 Windows 7/Linux/macOS 请自行查找方案</p>
</div>
<h2 id="目前可用的-VS-Code-调试-C-C-配置">目前可用的 VS Code 调试 C/C++ 配置</h2>
<blockquote>
<p>2020-11-12 19:53 GMT +8<br>
基于网上现有的稍加修改</p>
</blockquote>
<div class="note info flat"><p>请替换 [debugger_path] 并且保证你的 gcc 是可用状态，或者使用其他的编译器/调试器</p>
</div>
<p><strong><code>launch.json</code></strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// 使用 IntelliSense 了解相关属性。</span></span><br><span class="line">  <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">  <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2,0.0&quot;</span><span class="punctuation">,</span> <span class="comment">//配置文件的版本，以前使用是0.2.0，新版本已经弃用，改用为2.0.0</span></span><br><span class="line">  <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="comment">//配置域</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;(gdb) Launch&quot;</span><span class="punctuation">,</span> <span class="comment">//配置文件的名字，可以随便起</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span> <span class="comment">//调试的类型，Vscode现在支持很多，我这里主要是C，所以只能是cppdbg</span></span><br><span class="line">      <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span> <span class="comment">//配置文件的请求类型，有launch和attach两种，具体看官方文档</span></span><br><span class="line">      <span class="attr">&quot;targetArchitecture&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x64&quot;</span><span class="punctuation">,</span> <span class="comment">//硬件内核架构，为64bit，如图设置</span></span><br><span class="line">      <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><span class="punctuation">,</span> <span class="comment">//可执行文件的路径和文件名称</span></span><br><span class="line">      <span class="comment">//&quot;args&quot;: [&quot;file1&quot;, &quot;file2&quot;], //主函数调用时传入的参数</span></span><br><span class="line">      <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">//设为true时程序将暂停在程序入口处</span></span><br><span class="line">      <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span><span class="punctuation">,</span> <span class="comment">//调试时的工作目录</span></span><br><span class="line">      <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">//不知道干嘛的</span></span><br><span class="line">      <span class="attr">&quot;internalConsoleOptions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openOnSessionStart&quot;</span><span class="punctuation">,</span> <span class="comment">//</span></span><br><span class="line">      <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">//调试时是否显示控制台窗口</span></span><br><span class="line">      <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gdb&quot;</span><span class="punctuation">,</span> <span class="comment">//指定连接的调试器，可以省略不写</span></span><br><span class="line">      <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[debugger_path]/gdb.exe&quot;</span><span class="punctuation">,</span> <span class="comment">//调试器路径,在Linux环境下需要注释掉这一行</span></span><br><span class="line">      <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gcc&quot;</span><span class="punctuation">,</span> <span class="comment">//调试会话开始前执行的任务，一般为编译程序。与tasks.json的label相对应</span></span><br><span class="line">      <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="comment">//不知道干嘛的</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enable pretty-printing for gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><strong><code>tasks.json</code></strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gcc&quot;</span><span class="punctuation">,</span> <span class="comment">// 任务名称，与launch.json的preLaunchTask相对应</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gcc&quot;</span><span class="punctuation">,</span> <span class="comment">// 要使用的编译器</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span> <span class="comment">// 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out</span></span><br><span class="line">        <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span> <span class="comment">// 生成和调试有关的信息</span></span><br><span class="line">        <span class="string">&quot;-Wall&quot;</span><span class="punctuation">,</span> <span class="comment">// 开启额外警告</span></span><br><span class="line">        <span class="string">&quot;-fexec-charset=GBK&quot;</span> <span class="comment">// 防止中文乱码，按需取用</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">// 编译命令参数</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppbuild&quot;</span><span class="punctuation">,</span> <span class="comment">// 可以为shell或process，前者相当于先打开shell再输入命令，后者是直接运行命令</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[debugger_path]/bin&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;$gcc&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;compiler: gcc&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="Win10-任务栏菜单小图标变黑了">Win10 任务栏菜单小图标变黑了</h2>
<blockquote>
<p>2020-9-10 16:55 GMT+8<br>
建议创建开机任务执行</p>
</blockquote>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">ie4uinit <span class="literal">-show</span></span><br></pre></td></tr></table></figure>
<h2 id="通过-JDK-生成-JRE">通过 JDK 生成 JRE</h2>
<blockquote>
<p>2020-9-22 9:36 GMT+8</p>
</blockquote>
<div class="note warning flat"><p>需要管理员权限的 CMD 运行</p>
</div>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> %JAVA_HOME%</span><br><span class="line">bin\jlink.exe <span class="literal">--module-path</span> jmods <span class="literal">--add-modules</span> java.desktop <span class="literal">--output</span> jre</span><br></pre></td></tr></table></figure>
<h2 id="使用-hexo-reference-插件生成脚注编号重复">使用 hexo-reference 插件生成脚注编号重复</h2>
<ol>
<li>
<p>找到 <code>\&lt;blog_root_folder&gt;\node_modules\hexo-reference\src\footnotes.js</code></p>
</li>
<li>
<p>删除或者注释这几行代码</p>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// render footnotes (HTML)</span></span><br><span class="line">footnotes.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">footNote</span>) &#123;</span><br><span class="line">    html += <span class="string">&#x27;&lt;li id=&quot;fn:&#x27;</span> + footNote.<span class="property">index</span> + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br><span class="line">  -&gt;<span class="comment">// html += &#x27;&lt;span style=&quot;display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px&quot;&gt;&#x27;;</span></span><br><span class="line">  -&gt;<span class="comment">// html += footNote.index;</span></span><br><span class="line">  -&gt;<span class="comment">// html += &#x27;.&lt;/span&gt;&#x27;;</span></span><br><span class="line">    html += <span class="string">&#x27;&lt;span style=&quot;display: inline-block; vertical-align: top; margin-left: 10px;&quot;&gt;&#x27;</span>;</span><br><span class="line">    html += md.<span class="title function_">renderInline</span>(footNote.<span class="property">content</span>.<span class="title function_">trim</span>());</span><br><span class="line">    html += <span class="string">&#x27;&lt;a href=&quot;#fnref:&#x27;</span> + footNote.<span class="property">index</span> + <span class="string">&#x27;&quot; rev=&quot;footnote&quot;&gt; ↩&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Grub-找不到-Windows-引导了">Grub 找不到 Windows 引导了</h2>
<blockquote>
<p>2021-3-19 11:12 GMT+8<br>
我是用的是 Manjaro</p>
</blockquote>
<p>首先需要安装 <code>os-prober</code>，然后打开 <code>/etc/default/grub</code>，编辑或者添加以下几项</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GRUB_TIMEOUT_STYLE=menu  #显示菜单</span><br><span class="line">GRUB_TIMEOUT=10   #超时时间10秒</span><br><span class="line">GRUB_DISABLE_OS_PROBER=false   #允许os探测</span><br></pre></td></tr></table></figure>
<p>修改完成后运行 <code>sudo update-grub</code> 就可以找到 Windows 引导了。</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">引用自 <a href="https://blog.butanediol.me/2020/10/13/Buta-Sticky-Notes/">Buta Sticky Notes - 丁丁の店</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
  </entry>
  <entry>
    <title>半自动化生成博客相册</title>
    <url>/posts/64b2bc9e/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>下面有完整代码，自行复制</p>
</blockquote>
<h2 id="环境">环境</h2>
<ul>
<li>
<p>Hexo <a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a> 主题</p>
</li>
<li>
<p>本地运行脚本需要安装 Python 3</p>
</li>
</ul>
<h2 id="文件层级要求">文件层级要求</h2>
<p>首先你要知道 Butterfly 的相册格式，类似下面这样：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure>
<p>当然里面可以插入网络图片或者本地图片，如果你是网络图片或者混用就不用往下看了，这里只针对使用本地图片。</p>
<p>然后文件层级要类似下面这样：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|   // 这是 Hexo 博客的根目录</span><br><span class="line">|   // 其他文件我就省略了</span><br><span class="line">|</span><br><span class="line">└── source // Hexo 的资源文件目录</span><br><span class="line"><span class="code">       |</span></span><br><span class="line"><span class="code">       |   // 省略其他文件夹</span></span><br><span class="line"><span class="code">       |</span></span><br><span class="line"><span class="code">       └── gallery //相册文件夹，名字可自定义</span></span><br><span class="line"><span class="code">              ├── index.md // 相册的界面文件</span></span><br><span class="line"><span class="code">              ├── images.py // 生成脚本</span></span><br><span class="line"><span class="code">              └── images // 放图片的文件夹</span></span><br><span class="line"><span class="code">                    |</span></span><br><span class="line"><span class="code">                  ......</span></span><br><span class="line"><span class="code">                    //很多图片</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure>
<p>或者形如以下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|   // 这是 Hexo 博客的根目录</span><br><span class="line">|   // 其他文件我就省略了</span><br><span class="line">|</span><br><span class="line">└── source // Hexo 的资源文件目录</span><br><span class="line"><span class="code">       |</span></span><br><span class="line"><span class="code">       |   // 省略其他文件夹</span></span><br><span class="line"><span class="code">       |</span></span><br><span class="line"><span class="code">       └── gallery // 可能是一个集合文件夹或者其他</span></span><br><span class="line"><span class="code">              |</span></span><br><span class="line"><span class="code">              |</span></span><br><span class="line"><span class="code">              └── （1-n 级文件夹）// 多少层都无所谓</span></span><br><span class="line"><span class="code">                        |</span></span><br><span class="line"><span class="code">                        └── photo //真正的相册</span></span><br><span class="line"><span class="code">                                ├── index.md // 相册的界面文件</span></span><br><span class="line"><span class="code">                                ├── images.py // 生成脚本</span></span><br><span class="line"><span class="code">                                └── images // 放图片的文件夹</span></span><br><span class="line"><span class="code">                                        |</span></span><br><span class="line"><span class="code">                                      ......</span></span><br><span class="line"><span class="code">                                        //很多图片</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure>
<p>然后我们打开 <code>index.md</code> 的大概结构如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 相册</span><br><span class="line"><span class="section">type: &quot;picture&quot;</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">// 剩下的最好为空，不过问题不大</span><br></pre></td></tr></table></figure>
<h2 id="脚本">脚本</h2>
<p>首先贴上完整脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">path = os.path.split(os.path.realpath(__file__))[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">path2 = path[path.rfind(<span class="string">&quot;source&quot;</span>)+<span class="number">6</span>:]</span><br><span class="line"></span><br><span class="line">os.chdir(path+<span class="string">&quot;\images&quot;</span>)</span><br><span class="line">ls_file = []</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.scandir():</span><br><span class="line">    <span class="keyword">if</span> file.is_file():</span><br><span class="line">        ls_file.append(file.name)</span><br><span class="line"></span><br><span class="line">md_text = <span class="string">&quot;\n&#123;% gallery %&#125;\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> ls_file:</span><br><span class="line">    md_path = <span class="string">&quot;![&quot;</span>+os.path.splitext(image)[<span class="number">0</span>]+<span class="string">&quot;](&quot;</span>+<span class="built_in">str</span>(path2)+<span class="string">&quot;\\&quot;</span>+image+<span class="string">&quot;)&quot;</span></span><br><span class="line">    md_text += md_path.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)+<span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">md_text += <span class="string">&quot;&#123;% endgallery %&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">os.chdir(path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;index.md&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(md_text)</span><br></pre></td></tr></table></figure>
<ul>
<li>仅适用于 Windows 系统，如果是 Linux 要做出微小修改。</li>
<li>使用前需要清除之前生成的相册格式</li>
</ul>
<p>将此脚本保存到和 <code>index.md</code> 同级目录，然后定位到该目录执行 <code>python &lt;你保存的文件名&gt;.py</code> 即可使用。</p>
<h2 id="解析">解析</h2>
<p>下面我来解析一下这个脚本，<s>轻喷，我两天前才玩的 Python</s></p>
<h3 id="导入模块">导入模块</h3>
<p>首先使用 <code>import os</code> 导入 os 模块</p>
<h3 id="获取路径">获取路径</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path = os.path.split(os.path.realpath(__file__))[<span class="number">0</span>]</span><br><span class="line">path2 = path[path.rfind(<span class="string">&quot;source&quot;</span>)+<span class="number">6</span>:]</span><br></pre></td></tr></table></figure>
<p>获取脚本所在位置的绝对路径保存在 <code>path</code>，使用 <code>rfind()</code> 函数从右往左找到第一个 <code>source</code> 字符<s>如果你后面也有自己起这个名字的文件夹我就没办法了</s>，然后使用分片截取 <code>source\</code> 后的路径保存在 <code>path2</code>。</p>
<h3 id="遍历文件名">遍历文件名</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">os.chdir(path+<span class="string">&quot;\images&quot;</span>)</span><br><span class="line">ls_file = []</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.scandir():</span><br><span class="line">    <span class="keyword">if</span> file.is_file():</span><br><span class="line">        ls_file.append(file.name)</span><br></pre></td></tr></table></figure>
<p>使用 <code>chdir()</code> 切换工作目录到当前目录下的 <code>images</code> 目录，也就是放图片的目录，以便获取图片，然后遍历目录下的所有文件名称保存在 <code>ls_file</code> 中。</p>
<h3 id="处理格式">处理格式</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">md_text = <span class="string">&quot;\n&#123;% gallery %&#125;\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> ls_file:</span><br><span class="line">    md_path = <span class="string">&quot;![&quot;</span>+os.path.splitext(image)[<span class="number">0</span>]+<span class="string">&quot;](&quot;</span>+<span class="built_in">str</span>(path2)+<span class="string">&quot;\\&quot;</span>+image+<span class="string">&quot;)&quot;</span></span><br><span class="line">    md_text += md_path.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)+<span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">md_text += <span class="string">&quot;&#123;% endgallery %&#125;&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>现在我们已经获取好了所有文件名，并且得到了 <code>path2</code>——<code>从 source 到当前位置的相对路径</code>。</p>
<p>接着在第 1 行和第 7 行声明了相册的基本格式，第 3 行到第 5 行使用循环处理好了 MarkDown 图片格式。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">描述</span>](<span class="link">链接/路径</span>)</span><br></pre></td></tr></table></figure>
<p>这是 MarkDown 图片格式，所以我们要把去掉后缀的文件名放到 <code>描述</code> 中，把图片的相对路径放到 <code>链接/路径</code> 中。</p>
<p>用 <code>os.path.splitext(filename)</code> 就可以轻松分开文件名和后缀，由于我们只需要文件名所以使用 <code>os.path.splitext(image)[0]</code>，这里已经传入了文件名。</p>
<p>然后使用 <code>str()</code> 把相对路径 <code>path2</code> 转化为字符串并且加上图片的文件名。</p>
<p>最后整理好格式，使用 <code>+</code> 将各部分连接好，并且使用 <code>replace()</code> 替换所有的 <code>\</code> 为<code>/</code> 就成型了。</p>
<h3 id="写入文件">写入文件</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">os.chdir(path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;index.md&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(md_text)</span><br></pre></td></tr></table></figure>
<p>上一步已经把处理好的相册格式存放在 <code>md_text</code> 中,紧接着使用 <code>chdir()</code> 切换到脚本所在目录，这里有 <code>index.md</code> 以便我们写入。</p>
<p><code>with open(filename) as file:</code> 这是固定格式，不必多讲，不过一定要注意使用 <code>'a'</code> 切换到追加模式，以免丢失原来的模板；使用 <code>encoding='utf-8'</code> 指定编码，以免写入中文时乱码。</p>
<h2 id="懒是人类进步阶梯">懒是人类进步阶梯</h2>
<p>这是我用 Python 写的第一个玩意儿，主要是每次都要手动加好麻烦，我就想能不能用 Python 写一个脚本处理。学了两天，写的不是很好，比如不能自动识别原来已有的格式进行替换，每次都要手动去清除，又或者得手动执行，不能在 Hexo 部署的时候进行执行。</p>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Linux 服务器上使用 酷Q</title>
    <url>/posts/2bdd4eaf/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>众所周知 酷Q 是 Windows 平台下的， Linux 下要使用还是有难度的，好在官方做出了了 docker 镜像，这样就可以在 docker 直接运行了</p>
<h2 id="准备">准备</h2>
<ul>
<li>一台 Linux 服务器 (这里用来演示的系统是 CentOS 7.6 当然其他系统也ok)</li>
<li>docker</li>
<li>酷Q 容器</li>
</ul>
<h2 id="安装及运行-docker">安装及运行 docker</h2>
<p>在 CentOS 下直接使用 yum 安装即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install docker</span><br></pre></td></tr></table></figure>
<p>安装之后如果提示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Cannot connect to the Docker daemon. Is the docker daemon running on this host?</span><br></pre></td></tr></table></figure>
<p>这是因为 docker 还没有在运行</p>
<p>sudo 运行一下 docker 就正常了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure>
<h3 id="3-下载-酷Q-镜像，后台运行容器">3. 下载 酷Q 镜像，后台运行容器</h3>
<p>使用下面的命令获取镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker pull coolq/wine-coolq</span><br></pre></td></tr></table></figure>
<p>这个速度取决于你的服务器带宽</p>
<p>创建一个用于存放（映射）coolq 数据的目录（可以理解为数据卷？），用于持久化存放 coolq（酷Q应用）的数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /coolq-data</span><br></pre></td></tr></table></figure>
<p>这一步很重要，因为数据是最重要的，而且后面你的酷Q应用都要上传到此目录才能应用上的</p>
<p>后台运行 coolq 容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker run --name=coolq -d -p 8080:9000 -v /coolq-data:/home/user/coolq -e VNC_PASSWD=12345678 -e COOLQ_ACCOUNT=1000000000 coolq/wine-coolq</span><br></pre></td></tr></table></figure>
<p>其中部分参数根据自己的需求替换：</p>
<p>远程监听端口
<code>8080(9000映射成8080)</code>
数据存放位置
<code>/coolq-data（/home/user/coolq 映射到/coolq-data）</code>
远程访问密码
<code>12345678（只能设8位）</code>
机器人 QQ 帐号
<code>1000000000</code></p>
<p>实际上我当然运行的参数不是上面那些示例参数，根据自己的服务器实际来</p>
<p>这里要注意的是，首先你远程监听的端口，也就是自定义的web端口需要在服务器防火墙和云安全组都放行</p>
<p>其次，-d 指的是后台运行容器，-v后面接的就是将服务器的自己定义的酷Q数据目录映射到容器内的/home/user/coolq目录，-e是设置容器的系统环境</p>
<p>因为我们后面要通过vnc连接，所以要指定VNC_PASSWD</p>
<p>而酷Q要登录的qq小号（充当机器人）也可以通过-e COOLQ_ACCOUNT 去指定</p>
<h3 id="4-通过浏览器登录-vnc-进行使用">4. 通过浏览器登录 vnc 进行使用</h3>
<p>现在用浏览器打开 <a href="http://xn--ip-0p3cm89l:8080">http://你的ip:8080</a> 就可以看到 vnc 界面了，点击<code>链接</code>然后输入密码就可以看到桌面了，里面已经运行了 coolq air</p>
<p>可以看到使用 docker 还是很方便的，之前只用 wine 总是出现字体丢失的问题</p>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>酷Q</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 VS Code 编译 C/C++ 是输出中文乱码的问题</title>
    <url>/posts/ea8a69ac/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>在 Windows 下使用 VSCode 编译运行 C/C++，都出现中文乱码的问题，这是由于 Windows 控制台使用的还是 GBK 编码。我在网上搜了一下发现需要更换编译器解决，这里贴一下 <a href="http://blog.00oo00.xyz/">梧矜</a> 的 <a href="https://blog.00oo00.xyz/2020/03/12/ru-he-jie-jue-vscode-bian-yi-yun-xing-c-cheng-xu-shi-shu-chu-zhong-wen-luan-ma/">解决 vscode 编译运行 C 程序时乱码</a>。</p>
<p>不是这种方式不好，这种确实从根本解决了问题，但是我是实在懒，所以想了一些外门邪道。然后百度到了可以使用 <code>chcp 65001</code> 命令把控制台的编码切换到 UTF-8，当然你可以参考这篇 <a href="https://jingyan.baidu.com/article/f7ff0bfcee2dc22e26bb13d5.html">百度知道</a> 或者这篇 <a href="https://www.cnblogs.com/jpfss/p/11016870.html">博文</a> 把编码永久更改，但是我怕会出奇怪的问题，所以在 VS Code 的配置文件找了找，没想到还真有这种骚操作。</p>
<div class="note info flat"><p>2020-12-14 更新新方法</p>
</div>
<p>其实只要给 code runner 插件、手动编译时、VS Code 调试时上 <code>-fexec-charset=GBK</code> 就好了，之前那种方法简直是绕弯路，交作业的时候只需要把编码改成 GBK 就好了。唯一的缺点就是不能编译 GBK 文件，不过这不是问题。</p>
<h2 id="偷懒的方式">偷懒的方式</h2>
<p>在 VS Code 中通过打开 <code>文件</code>-&gt; <code>首选项</code>-&gt; <code>设置</code>，然后编辑 VS Code 的 <code>setting.json</code> ，然后添加如下代码</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;terminal.integrated.shellArgs.windows&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;-NoExit&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;chcp 65001&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>然后保存即可，现在编译就不会出现中文乱码的问题了，这里贴一下图</p>
<p><img src="../../media/article_img/vscode_cpp_chinese_garbled_code/%E4%BF%AE%E6%94%B9%E5%89%8D.png" alt="修改前"></p>
<p><img src="../../media/article_img/vscode_cpp_chinese_garbled_code/%E4%BF%AE%E6%94%B9%E5%90%8E.png" alt="修改后"></p>
<h3 id="缺点">缺点</h3>
<p>当然缺点也是有的，就是每次编译的时候会在顶部显示一个 <code>Active code page: 65001</code>，不过我觉得无伤大雅，毕竟没换编译器就可以实现差不多的效果还想怎么样。<s>主要还是懒</s></p>
<h2 id="简便的方式">简便的方式</h2>
<p><s>其实也可以通过这个按钮解决，不过这个是改变文件的编码，如果把这个文件放到其他设备上可能会有问题</s></p>
<p><img src="../../media/article_img/vscode_cpp_chinese_garbled_code/%E6%8C%89%E9%92%AE.png" alt="按钮"></p>
<h2 id="工作区">工作区</h2>
<p>如果你只需要在这个工作区生效的话只需要这个目录下的 <code>.vscode</code> 文件夹里的 <code>setting.json</code> 添加这个配置就好了，这样只会对这个工作区生效。</p>
<h2 id="更多">更多</h2>
<p>有关 <code>chcp</code> 的更多描述</p>
<blockquote>
<p>65001 UTF-8 代码页
950 繁体中文
936 简体中文默认的 GBK
437 MS-DOS 美国英语</p>
</blockquote>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>VS Code</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Coding 上部署完美校园打卡</title>
    <url>/posts/eb6032e9/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="note info flat"><p>感谢 <a href="https://github.com/ReaJason">ReaJason</a> 大佬的 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions">仓库</a></p>
</div>
<p>由于一些未知的原因，没法在 GitHub Action 上使用 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions">https://github.com/ReaJason/17wanxiaoCheckin-Actions</a> 进行打卡了，本地部署还不如手动打，买服务器又太贵了，我就想能不能在 Coding 上来进行部署。</p>
<h2 id="创建项目和仓库">创建项目和仓库</h2>
<p>首先你要有个 Coding 账号，然后登陆进去，选择 <code>项目</code>-&gt;<code>创建项目</code>，选择第一项
<img src="../../media/article_img/wanxiao_checkin/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE.jpeg" alt="创建项目">
名称和标识随意填写，这里填写 test。创建之后点击 <code>代码仓库</code>，选择 <code>新建代码仓库</code>
<img src="../../media/article_img/wanxiao_checkin/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93.jpeg" alt="新建仓库"></p>
<h2 id="构建持续部署">构建持续部署</h2>
<p>选择 <code>导入外部仓库</code>，然后在 <code>Git 仓库 URL</code> 这一项填入 <code>https://github.com/ReaJason/17wanxiaoCheckin-Actions.git</code> 点击确认就可以导入了。
<img src="../../media/article_img/wanxiao_checkin/%E5%AF%BC%E5%85%A5.jpeg" alt="导入">
随后点击 <code>持续部署</code>-&gt;<code>构建节点</code>，选择 <code>创建构建计划</code>，然后拉到最下面选择 <code>自定义构建过程</code>
<img src="../../media/article_img/wanxiao_checkin/%E5%88%9B%E5%BB%BA%E6%9E%84%E5%BB%BA.jpeg" alt="创建构建">
<img src="../../media/article_img/wanxiao_checkin/%E8%87%AA%E5%AE%9A%E4%B9%89.jpeg" alt="自定义">
这里不用做更改，直接确定就好了
<img src="../../media/article_img/wanxiao_checkin/%E7%A1%AE%E5%AE%9A.jpeg" alt="确定">
点击切换到文本编辑器
<img src="../../media/article_img/wanxiao_checkin/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8.jpeg" alt="文本编辑器">
然后使用下面的内容替换进去</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">  agent &#123;</span><br><span class="line">    docker &#123;</span><br><span class="line">      reuseNode true</span><br><span class="line">      registryUrl &#x27;https://coding-public-docker.pkg.coding.net&#x27;</span><br><span class="line">      image &#x27;public/docker/python:3.7&#x27;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  stages &#123;</span><br><span class="line">    stage(&#x27;检出&#x27;) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        checkout([</span><br><span class="line">          $class: &#x27;GitSCM&#x27;,</span><br><span class="line">          branches: [[name: GIT_BUILD_REF]],</span><br><span class="line">          userRemoteConfigs: [[</span><br><span class="line">            url: GIT_REPO_URL,</span><br><span class="line">            credentialsId: CREDENTIALS_ID</span><br><span class="line">          ]]])</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      stage(&#x27;构建&#x27;) &#123;</span><br><span class="line">        steps &#123;</span><br><span class="line">          archiveArtifacts(artifacts: &#x27;README.md&#x27;, fingerprint: true)</span><br><span class="line">          echo &#x27;部署环境&#x27;</span><br><span class="line">          sh &#x27;pip3 install requests pycryptodome&#x27;</span><br><span class="line">          sh &#x27;pip3 install pycryptodome&#x27;</span><br><span class="line">          echo &#x27;开始签到&#x27;</span><br><span class="line">          sh &#x27;&#x27;&#x27;python3.7 index.py &lt;&lt;EOF</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;USERNAME&#125;</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;PASSWORD&#125;</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;SCKEY&#125;</span></span><br><span class="line">EOF&#x27;&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<div class="note warning flat"><p>切记在 <code>代码仓库</code>-&gt;<code>设置</code>-&gt;<code>同步信息</code> 去掉勾选 <code>开启自动同步</code> 然后保存，以免签到失效。</p>
</div>
<h2 id="后续设置">后续设置</h2>
<p>点击上面的保存后选择触发规则，点击定时触发这里添加一个规则
<img src="../../media/article_img/wanxiao_checkin/%E5%AE%9A%E6%97%B6%E8%A7%A6%E5%8F%91.jpeg" alt="定时触发">
<img src="../../media/article_img/wanxiao_checkin/%E5%BB%BA%E8%AE%AE%E8%A7%84%E5%88%99.jpeg" alt="建议规则"></p>
<p>然后点击 <code>变量与缓存</code>，新建三个环境变量
<img src="../../media/article_img/wanxiao_checkin/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.jpeg" alt="环境变量"></p>
<p><code>SCKEY</code>——Server 酱的 SCKEY
<code>USERNAME</code>——完美校园的登录账号
<code>PASSWORD</code>——完美校园的登录面</p>
<p>如果要多人打卡请参考 <a href="https://github.com/ReaJason/17wanxiaoCheckin-Actions">原文档</a></p>
<p>最后返回选择立即构建就可以测试了，成功的话微信会有推送</p>
<p><img src="../../media/article_img/wanxiao_checkin/%E6%B5%8B%E8%AF%95.jpeg" alt="测试"></p>
<h2 id="推送打卡结果到-QQ">推送打卡结果到 QQ</h2>
<p>打开 Qmsg酱的 <a href="https://qmsg.zendee.cn/">官网</a>，根据网站的指引登录账号等操作</p>
<blockquote>
<p>1.<a href="https://qmsg.zendee.cn/me.html">登录</a>Qmsg网站。<br>
2.选择「Qmsg酱」小姐姐（有多个「Qmsg酱」小姐姐供您选择哦）。<br>
3.添加需要接收消息的QQ号（每个QQ号都需要添加您选择的「Qmsg酱」为QQ好友）。<br>
4.调用接口（<a href="https://qmsg.zendee.cn/api.html">查看接口文档</a>）发送GET或POST请求，就能在QQ里收到「Qmsg酱」给你发的消息。</p>
</blockquote>
<p>一定要记得添加 Qmsg酱好友！</p>
<p>打开控制台在 <code>KEY</code> 这里复制你的 key
<img src="../../media/article_img/wanxiao_checkin/key.jpeg" alt="key"></p>
<p>然后返回仓库打开 <code>index.py</code> 这个文件，按下 <code>Ctrl + F</code> 搜索 <code>desp</code> 替换为 <code>msg</code>，如图所示
<img src="../../media/article_img/wanxiao_checkin/%E6%9B%BF%E6%8D%A2.jpeg" alt="替换">
最后把 316 行的 <code>send_url = f&quot;https://sc.ftqq.com/&#123;sckey&#125;.send&quot;</code> 改为 <code>send_url = f&quot;https://qmsg.zendee.cn/send/&#123;sckey&#125;&quot;</code> 就好了，记得修改环境变量的 <code>SCKEY</code>，快去运行测试一下吧。</p>
<div class="note warning flat"><p>322 行的 <code>for _ in range(3):</code> 改为 <code>for _ in range(1):</code> 可以避免多次推送，可能有未知问题。</p>
</div>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>完美校园</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Windows 系统上给 ssh 设置代理</title>
    <url>/posts/4d70a82d/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="note info flat"><p>看清，使用的系统是 Windows 不是 Linux 或者 MacOS</p>
</div>
<p>百度搜到的很多给 git 设置代理的办法，都是给 http 设置代理，而不是给 SSH 设置代理。那个 <code>git config --global http.proxy http://127.0.0.1:1080</code> 设置起来，只针对 http 的 git 有效果。
然后就是 <code>ProxyCommand nc -v -x 127.0.0.1:1080 %h %p</code>，那个分明是给 Linux 才能用的， Windows 上哪里来的 nc 程序？</p>
<p>以下操作是给 Windows 用的，我的操作：</p>
<p>在自己的用户文件夹找到 .ssh 文件夹，比如我的是 <code>C:\Users\nihao\.ssh</code> ，在里面新建一个空白文件，取名 config，如果已经有了就不用创建了。</p>
<p>注意不是 config.txt ！</p>
<p>我强烈建议把 Windows 的后缀显示给打开，不然你根本不知道自己到底在编辑什么文件。</p>
<p>都用 Git 了不至于还害怕自己把文件后缀名给改错了吧？</p>
<p>在 config 文件里写上一行就行：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ProxyCommand <span class="string">&quot;C:\Program Files\Git\mingw64\bin\connect.exe&quot;</span> <span class="literal">-S</span> <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">1080</span> %<span class="built_in">h</span> %p</span><br></pre></td></tr></table></figure>
<p>这里 git 的安装路径和后面的代理自己看着填，不要试着用相对路径，保证要吃亏。因为 <code>Program Files</code> 文件夹中间带一个空格，所以这里需要把整个路径给引号引起来。 后面的代理的话，<code>-S</code> 指是 socks 代理，默认是 socks5，<code>127.0.0.1:1080</code> 就是你本地的代理地址，后面的 <code>%h %p</code> 意思是 Host 和 Port，必须得写上，我也不知道为什么要这么设计。 如果要使用 HTTP 代理，就写 <code>-H</code>，更多代理类型（比如 socks4）请参 <a href="https://bitbucket.org/gotoh/connect/wiki/Home#!more-detail">这个</a>。</p>
<p>上这个写法是针对全局的，如果想只针对某个网站的话，就这么写：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  ProxyCommand <span class="string">&quot;C:\Program Files\Git\mingw64\bin\connect.exe&quot;</span> <span class="literal">-S</span> <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">1080</span> %<span class="built_in">h</span> %p</span><br></pre></td></tr></table></figure>
<p>现在就可以愉快的使用代理了，不过要记住一定使用 ssh 协议。</p>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>ssh</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>Kirby Assistant 2.x.x更新日志</title>
    <url>/posts/417dae5e/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>目前最新版本 v2.0.6 (56)</p>
<h2 id="v2-0-6-56">v2.0.6 (56)</h2>
<p>紧急修复了高版本无法安装的问题，并且移除的权限，很是抱歉</p>
<h2 id="v2-0-5-55">v2.0.5 (55)</h2>
<p>1.修改部分样式贴近规范
2.修改下载游戏时的对话框样式</p>
<h2 id="v2-0-4-54">v2.0.4 (54)</h2>
<p>1.修复个别主题下输入框颜色不正常的问题
2.排除了一个引起闪退的 bug
3.新增一个配色</p>
<h2 id="v2-0-3-53">v2.0.3 (53)</h2>
<p>1.修复部分黑暗模式与白色模式下的UI问题
2.修复UI漂移的问题</p>
<h2 id="v2-0-2-52">v2.0.2 (52)</h2>
<p>1.修正夜间模式下设置显示异常
2.修复闲聊显示异常问题
3.修复无法清除图片缓存
4.修复更新检测异常
5.重新优化的主题</p>
<h2 id="v2-0-1-51">v2.0.1 (51)</h2>
<p>1.自动根据 AndroidQ 夜间模式选项切换夜间模式
2.翻译文本修正
3.图片资源修复</p>
<h2 id="v2-0-0-50">v2.0.0 (50)</h2>
<p>1.全新 API 重新编写
2.大部分 MD2 特性
3.修复底栏切换过快崩溃的 Bug
4.新增黑暗模式
5.假装无缝切换主题
6.优化用户信息修改后刷新操作
7.优化菜单显示方式
8.防止未登录情况下进入闲聊的问题
9.重新优化的对话框
10.应用内清除缓存
11.重写头像裁剪
12.上传逻辑
13.全新官网</p>
]]></content>
      <categories>
        <category>我的 Android 应用</category>
      </categories>
      <tags>
        <tag>Kirby Assistant</tag>
        <tag>更新日志</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次 WordPress 搭建与宝塔面板配置</title>
    <url>/posts/75f0fab2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>WordPress 可能是比较好用的博客系统了，当然改一下做个非博客应该也可以。当然是需要服务器的，想我这种用 Hexo 配合 GitHub Page 当然是用不起的了，不过前段时间帮朋友搞了一下，就在这里记录一下过程了</p>
<h2 id="准备">准备</h2>
<h3 id="选择服务器">选择服务器</h3>
<p>首先服务器用的是阿里云的轻量应用服务器，因为比较便宜，<a href="https://common-buy.aliyun.com/?commodityCode=swas&amp;regionId=cn-hongkong&amp;userCode=3xwlzuab#/buy">点击这里</a>可以查看价格和配置。当然这里就不测试了，因为价格在这里摆着，还要什么自行车。</p>
<h3 id="下载-WordPress-文件">下载 WordPress 文件</h3>
<p>访问<a href="https://cn.wordpress.org/download/">https://cn.wordpress.org/download/</a>
然后点击
<img src="../../media/article_img/wordpress_baota_config/1.png" alt="enter description here">
下载到你能方便找到的地方就好了</p>
<h2 id="系统和面板">系统和面板</h2>
<p>然后我选择的是 CentOS 然后装的宝塔面板，<a href="https://bt.cn/">点击查看</a>宝塔的面板，免费版也够用</p>
<h2 id="SSH到服务器">SSH到服务器</h2>
<h3 id="开启端口">开启端口</h3>
<p>看这个页面即可<a href="https://www.bt.cn/bbs/thread-19376-1-1.html">https://www.bt.cn/bbs/thread-19376-1-1.html</a></p>
<p>推荐打开所有端口，因为宝塔面板也有防火墙</p>
<h3 id="SSH-配置">SSH 配置</h3>
<p>首先要到轻量应用服务器的<a href="https://swas.console.aliyun.com">控制面板</a>然后点击你的服务器
<img src="../../media/article_img/wordpress_baota_config/2.png" alt="enter description here"></p>
<p>点进去后再转到远程连接
<img src="../../media/article_img/wordpress_baota_config/3.png" alt="enter description here"></p>
<p>选择这里任何一种都可以，没有任何影响
<img src="../../media/article_img/wordpress_baota_config/4.png" alt="enter description here"></p>
<p>那么我这里是用的第三种，也就是用账号密码来连接。</p>
<h3 id="SSH-客户端">SSH 客户端</h3>
<p>因为用账号密码的话，是要用本地客户端连接的，那么这里推荐使用[FinalShell(<a href="http://www.hostbuf.com/t/988.html">http://www.hostbuf.com/t/988.html</a>)来连接，国人制作，有免费版本，中文界面，支持 Windows,macOS,Linux
点金网址后选择你系统对应的链接就可以下载了
<img src="../../media/article_img/wordpress_baota_config/5.png" alt="enter description here"></p>
<p>下载安装后打开就可以看到界面了</p>
<p>然后点击这个按钮
<img src="../../media/article_img/wordpress_baota_config/6.png" alt="enter description here"></p>
<p>然后点击
<img src="../../media/article_img/wordpress_baota_config/7.png" alt="enter description here"></p>
<p>就可以添加一个连接了</p>
<p>在这里输入服务器的名字，ip，用户名，密码，然后保存再双击刚才添加的就可以连接了
<img src="../../media/article_img/wordpress_baota_config/8.png" alt="enter description here"></p>
<h2 id="安装面板">安装面板</h2>
<p>安装很简单，一行命令就搞定了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure>
<p>如果是 Ubuntu 用这个命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure>
<p>Debian 系统的用这个</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure>
<p>Fedora 系统用这个</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure>
<p>怎么样，是不是很简单，后面都是自动化的安装了。当然我只使用过 CentOS，所以下面的还用 CentOS举例</p>
<p>安装完毕后会有一段提示，里面有访问面板的地址和默认的用户名还有密码，当然随后都可以改</p>
<h2 id="登录面板">登录面板</h2>
<p>进入面板登录后会选择安装一些东西，这里推荐使用编译安装，虽然费时间但是很稳定。</p>
<p>现在，喝杯咖啡看看书，或者小睡一会儿，这个过程可能需要3-4个小时</p>
<h2 id="解析域名">解析域名</h2>
<p>现在，你的面板应该已经部署好了，那下一步就是解析域名了，这里假设你已经完成了域名的更改，我使用的是腾讯云提供的解析服务演示，当然阿里云或者其他服务商也会有。
访问<a href="https://console.cloud.tencent.com/cns">https://console.cloud.tencent.com/cns</a>登录腾讯云配置解析</p>
<h3 id="绑定域名">绑定域名</h3>
<p>点击<strong>添加域名</strong>然后输入你的域名，比如输入 <a href="http://ljbaidu.com">ljbaidu.com</a> <s>当然这个要填你的域名，我只是吐槽一下百度</s>然后点击确定就可以了</p>
<h3 id="配置DNS">配置DNS</h3>
<p>添加域名后如果<strong>解析状态</strong>提示异常的话就可能是 DNS 的问题，需要去注册商哪里讲 DNS 修改为</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">f1g1ns1.dnspod.net</span><br><span class="line">f1g1ns2.dnspod.net</span><br></pre></td></tr></table></figure>
<p>然后等待最多72小时就可以了</p>
<h3 id="添加解析">添加解析</h3>
<p>看到这里说明你的 DNS 已经没问题了，现在点击操作栏的<strong>解析</strong>，进去之后点击上面的添加记录。<strong>主机记录</strong>选择 <code>@</code> 这一项就可以了，<strong>记录类型</strong>选择 <code>A</code> ，<strong>记录值</strong>填入你的服务器 <code>IP</code></p>
<p>最后点击保存，稍作等待，这个过程需要十分钟才能生效<s>当然如果你是氪金用户当我没说</s></p>
<h2 id="正式开始部署-WordPress">正式开始部署 WordPress</h2>
<h3 id="添加站点">添加站点</h3>
<p>现在登录你的宝塔面板，在侧边栏找到<strong>网站</strong>，点击后选择<strong>添加站点</strong></p>
<p>然后这样填
<img src="../../media/article_img/wordpress_baota_config/9.png" alt="enter description here"></p>
<p><s>再次声明，ljbaidu.com只是调侃，请填写自己的域名</s></p>
<p>然后点击<strong>提交</strong></p>
<h3 id="添加数据库">添加数据库</h3>
<p>然后选择侧边栏的<strong>数据库</strong>，然后选择<strong>添加数据库</strong>
填写数据库名称，用户名和密码，选择访问权限然后选择提交，如图(注意看箭头所指的选项)
<img src="../../media/article_img/wordpress_baota_config/10.png" alt="enter description here"></p>
<h3 id="修改-WordPress-配置">修改 WordPress 配置</h3>
<p>解压刚开始下载的 wordpress-5.2.2.zip ，然后解压到一个文件夹中。
找到 wp-config-sample.php 并重命名为 wp-config.php ，然后使用文本编辑器或其他打开 wp-config.php。
找到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;database_name_here&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;username_here&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;password_here&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span> );<span class="comment">//这里填入刚才创建数据库时数据库名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;wordpress&#x27;</span> );<span class="comment">//这里填入刚才创建数据库时的用户名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;password&#x27;</span> );<span class="comment">//这里填入刚才创建数据库时的密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );<span class="comment">//这个和下面三个不做修改</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br></pre></td></tr></table></figure>
<p>保存文件并退出</p>
<p>返回上一目录，压缩这个文件夹
<img src="../../media/article_img/wordpress_baota_config/11.png" alt="enter description here"></p>
<h3 id="上传-WordPress">上传 WordPress</h3>
<p>打开宝塔面板，选择网站</p>
<p>点击根目录那一栏下面的文字，也就是
<img src="../../media/article_img/wordpress_baota_config/12.png" alt="enter description here"></p>
<p>然后选择<strong>上传</strong>，再点击<strong>选择文件</strong>，然后找到刚才打包的文件
<img src="../../media/article_img/wordpress_baota_config/13.png" alt="enter description here"></p>
<p>点击<strong>开始上传</strong>，等待即可</p>
<h3 id="解压">解压</h3>
<p>点击这个选项，然后直接确定即可解压
<img src="../../media/article_img/wordpress_baota_config/14.png" alt="enter description here"></p>
<p>现在访问 你的域名/wp-admin/install.php 就可以开始安装了，比如 <a href="http://ljbaidu.com/wp-admin/install.php">http://ljbaidu.com/wp-admin/install.php</a> <s>再次，我没有这个域名，所以下来用我的域名做演示</s></p>
<p>访问之后可以看到这个界面
<img src="../../media/article_img/wordpress_baota_config/15.png" alt="enter description here"></p>
<p>根据图上的注释填写，然后点击就可以安装了</p>
<p>在这里点击Log In
<img src="../../media/article_img/wordpress_baota_config/16.png" alt="enter description here"></p>
<p>在下一个页面登录即可</p>
<h2 id="结束">结束</h2>
<p>至此，所有安装过程已经完成，现在就可以开始使用了</p>
<p>如果在安装过程中有什么问题可以通过博客主页的联系方式联系我，或者在下面留下你的评论</p>
]]></content>
      <categories>
        <category>技术记录</category>
      </categories>
      <tags>
        <tag>网站搭建</tag>
        <tag>WordPress</tag>
        <tag>宝塔面板</tag>
      </tags>
  </entry>
  <entry>
    <title>Kirby Assistant 1.x.x更新日志</title>
    <url>/posts/12e7f5da/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="v1-4-5-48">v1.4.5(48)</h2>
<p>1.修复登录时用户名不变的 Bug
2.旧版本已经不能下载模拟器 请更新
3.修复闲聊发送失败的问题</p>
<h2 id="v1-4-4-47">v1.4.4(47)</h2>
<p>1.根据 Material Design 2 重新调整的界面
2.重新调整的配色
3.贡献者名单更新</p>
<h2 id="v1-4-3-46">v1.4.3(46)</h2>
<p>1.优化apk体积
2.优化图片显示
3.bug修复</p>
<h2 id="v1-4-2-45">v1.4.2(45)</h2>
<p>1.修改游戏详情界面
2.修正动画逻辑
3.模拟器下载等等，最近没钱</p>
<h2 id="v1-4-1-44">v1.4.1(44)</h2>
<p>1.迁移 AndroidX 构建
2.恢复除用户头像和模拟器下载的所有功能
3.史诗级压缩
4.修复切换视图时闪退的 Bug
5.修复图标问题
6.调整了图片显示大小</p>
<h2 id="v1-4-0-43">v1.4.0(43)</h2>
<p>1.重回2017</p>
<h2 id="v1-3-9-42">v1.3.9(42)</h2>
<p>1.替换下拉刷新为 Material Design 样式
2.调整部分UI
3.也许修复了bug</p>
<h2 id="v1-3-8-41">v1.3.8(41)</h2>
<p>1.现在登录登出不会再重启 app 了
2.现在修改头像也不会重启 app 了
3.修改了底栏的效果</p>
<h2 id="v1-3-7-40">v1.3.7(40)</h2>
<p>1.新增 Telegarm 频道联系方式
2.使用 Shortcut 特性
3.统一了应用内部分图片风格
4.移除无用资源
5.修复了一个资源问题
6.1儿童节快乐</p>
<h2 id="v1-3-6-39">v1.3.6(39)</h2>
<p>1.修复自适应图标
2.修复闲聊保存机制
3.使用新方法优化了所有数据结构
4.闲聊部分界面重构
5.优化列表动画
6.优化进入游戏详情动画</p>
<h2 id="v1-3-5-38">v1.3.5(38)</h2>
<p>1.修复编辑闲聊时退出会进行保存的 Bug
2.新增花里胡哨的列表，大部分图片模糊后作为背景
3.重写游戏下载页面
4.新的图标感谢@hk流星
5.新的宣传图感谢@梁月信乃
6.新的模糊逻辑，从在线模糊改为离线模糊(可能加大缓存大小但是减少流量损耗)
7.修改部分动画效果
8.大幅提升启动速度，至少缩减 1500 ms(1.5 s)
9.bang 15 便士
10.修复可能存在的 Bug</p>
<h2 id="v1-3-4-37">v1.3.4(37)</h2>
<p>1.调整闲聊列表配色
2.修复编辑当前闲聊时不会自动填充的问题
3.调整登录界面布局
4.移除闲聊发送显示随机 ID</p>
<h2 id="v1-3-3-36">v1.3.3(36)</h2>
<p>1.更改选择头像图片的逻辑
2.修改部分界面配色
3.FAQ部分修复</p>
<h2 id="v1-3-2-35">v1.3.2(35)</h2>
<p>1.修复白屏bug(测试性，不保证)
2.迁移部分资源服务器
3.修正支付宝捐赠逻辑</p>
<h2 id="v1-3-1-34">v1.3.1(34)</h2>
<p>1.修复无法更换头像的问题
2.修复更新时标题栏有误的问题</p>
<h2 id="v1-3-0-33">v1.3.0(33)</h2>
<p>1.新增版权信息确认
2.更正贡献者列表 保证每个贡献者都可以有一个页面访问
3.修复部分资源无法访问的问题</p>
<h2 id="v1-2-9-32">v1.2.9(32)</h2>
<p>1.修改了包名重新上架
2.修正了捐赠页面
3.官网域名更新 请查看简介
4.修复bug</p>
<h2 id="v1-2-8-31">v1.2.8(31)</h2>
<p>1.更新贡献者列表
2.修正了图标
3.修复上下文获取异常问题
4.修复无法检测更新问题</p>
<h2 id="v1-2-7-30">v1.2.7(30)</h2>
<p>1.[非]全新图标
2.移除了双图标模式
3.修订了部分翻译
4.新增[极简模式]隐藏你不需要的
5.修复部分资源无法访问的问题</p>
<h2 id="v1-2-6-29">v1.2.6(29)</h2>
<p>1.新增更新检测，有新版时会提醒更新
2.FAQ 修正，翻译版本尚在修复中
3.英文翻译修正
4.翻译中文翻译修正
5.贡献者名单修正
6.修复 wii 模拟器版本问题</p>
<h2 id="v1-2-5-28">v1.2.5(28)</h2>
<p>1.繁体中文翻译修正
2.解决闲聊发送异常问题
3.添加 Android 绿色应用公约标识</p>
<h2 id="v1-2-4-27">v1.2.4(27)</h2>
<p>1.史诗级压缩有木有
2.移除了存储访问权限
3.修复无法进入更换头像的 Bug
4.重写头像剪裁
5.繁体中文翻译修订
6.更换关于为设置
7.将切换图标移动到设置界面
8.修订设置界面内容
9.Kirby Assistant 正在申请 Android 绿色应用公约
10.使用了绿色公约的相关 SDK</p>
<h2 id="v1-2-3-26">v1.2.3(26)</h2>
<p>1.修复了金手指界面无法进入的问题
2.修改了下拉刷新动画
3.修复屏幕旋转后数据丢失问题</p>
<h2 id="v1-2-2-25">v1.2.2(25)</h2>
<p>1.修复部分手机无法启动的问题
2.移除启动界面动画</p>
<h2 id="v1-2-1-24">v1.2.1(24)</h2>
<p>本周，kirby Assistant 迎来了重大版本更新，请务必更新，否则在旧版本中无法正常使用一些功能，快来看看吧:
1.重写闲聊
2.迁移服务器，旧版本将无法访问
3.重写底层，优化性能，解决历史遗留问题
4.抱歉各位丢失了闲聊数据
5.字符串修订
6.使用 PBF
7.主界面切换动画修改</p>
<h2 id="v1-2-23">v1.2(23)</h2>
<p>本周，Kirby Assistant 迎来了重大版本更新，快来看看吧:
1.优化了启动动画，现在更顺畅了
2.更换了头像占位图
3.更换了发送闲聊等界面的点击效果
4.移除了双图标在启动界面显示
5.更换了权限申请逻辑
6.重写了统计逻辑
7.修订了大部分翻译
8.修复需要为非简体中文，繁体中文，英文时的应用名错乱问题
9.修复了需要切换无效的问题
10.圣诞快乐</p>
<h2 id="v1-1-22">v1.1(22)</h2>
<p>本周，Kirby Assistant 迎来了小版本迭代更新，快来看看吧:
1.优化所有主题配色
2.移除引起 Bug 的暗色
3.新增配色  灵感来源自虚无
4.闲聊提醒优化
5.资源界面重写
6.翻译修订</p>
<h2 id="v1-0-21">v1.0(21)</h2>
<p>未来·炫动  重大版本更新
1.全新启动界面动画
2.全新列表加载动画
3.全新刷新动画
4.全新律动动画
5.全新切换动画
6.微调下载游戏 UI
7.全新模糊图算法
8.新增统计 SDK(不会收集您的隐私数据)
9.更换图标切换逻辑
10.Pie 适配性
11.捐赠逻辑修改
12.底栏切换界面逻辑修改 防止在同一个界面重载
13.所有动画全部精心设计 保证赏心悦目
14.资源名称修订
15.翻译修订
16.资源链接修复
17.模拟器下载修复
18.金手指个别代码修复
19.视频修订
20.Slogan 修订</p>
]]></content>
      <categories>
        <category>我的 Android 应用</category>
      </categories>
      <tags>
        <tag>Kirby Assistant</tag>
        <tag>更新日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Kirby Assistant 编年史</title>
    <url>/posts/a505f9a9/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>写在前面：
由于很多东西已经无法考证<s>其实就是懒，当初没记下来</s>，所以早期的版本可能会有记不清版本号的情况，不过大概还是能对的上时间的。</p>
</blockquote>
<h2 id="开局一段话，内容全靠编">开局一段话，内容全靠编</h2>
<p>大家好，众所<s>不那么</s>周知 Kirby Assistant 是一款可以下载星之卡比系列游戏的软件，第一个有意义的版本诞生于 2017 年 1 月 15 日 <s>我钦定的</s>。那这过去的时间里究竟发过什么有趣的事？或者说是怎么发展的？那接着往下看吧！<strong>电脑用户可以用过左边的栏目快速定位，手机用户，对不住啦</strong></p>
<h2 id="源自想法">源自想法</h2>
<p>任何应用的诞生都应当有一些这样那样的理由，Kirby Assistant 也不例外。老用户可能知道这款程序最早的名字是 Kirby Download 的，那他又是怎么诞生的呢？这还要从 <a href="https://github.com/wwylele">wwylele</a> 说起。当时他在 星之卡比吧 里编写一款可以编辑 星之卡比:梦之泉物语 DX 的地图编辑器，其中一楼发的图中背景是 IDE，里面的是编辑器源码，前景是编辑器本体，然后楼中楼里有人说「看源码」之类的话。当时我内心就：EXM？还有这种操作吗？太炫酷了，这就算是我想学习编程的起源了。</p>
<p>再后来就是接手吧盘的事了，具体时间已经无从考证，因为 wwylele 已经删除了原贴，但是根据 <a href="https://tieba.baidu.com/p/4878419837">为啥置顶的资源被删了</a> 这帖的发布时间 <code>2016-11-27</code> ，以及我发的 <a href="https://tieba.baidu.com/p/4850329936">发布，肯德基豪华午餐（雾 kirby download 发布</a> <code>2016-11-05</code> 以及 <a href="https://tieba.baidu.com/p/4881013343">我个人看法！？以及水一帖！？</a> <code>2016-11-29</code> 这两贴的时间来看，最早在 2016-11-05 时我已经接手了贴吧并且有了 Kirby Download 初代版本，所以姑且推算在 <code>2016-11</code> 前我接手了吧盘吧。</p>
<p>那接手了，可不能只是简单的吧资源放在我名下就完事了。如果有的人嫌访问吧盘麻烦怎么办？如果有的人不能迅速找不到想要的资源怎么办？如果有的人记不住地址怎么办？<s>亡命三连</s> 那可不得了，这得赶紧搞个东西出来方便一下。脑子里突然闪过当年种下的草，正好最近有看到 iApp，这个可以快速编写程序，那就搞呗？</p>
<h2 id="未发布的初代-绝唱-iApp">未发布的初代,绝唱 iApp</h2>
<h3 id="从零开坑">从零开坑</h3>
<p>搞！说的轻巧，那得有好的构思啊。那怎么做？怎么设计？卡片？不行，效率太低，那就列表？诶，这个绝妙，可以快速定位。用之前下载的 iApp 教程就这样动手起来，十分简单，甚至不用动手编写，只需要拖动就可以了。这可让我第一次尝试就尝到了甜头，顺顺利利的就做了几个列表出来。</p>
<h3 id="无力吐槽的图标">无力吐槽的图标</h3>
<p>列表是有了，那图标？既然这是关于 <code>星之卡比</code> 的程序，那就用一张官方的图，后面再用 PS Touch 做一个背景上去，就是下面这个
<img src="../../media/article_img/chronicle_of_kirbyassistant/%E5%88%9D%E4%BB%A3-%E6%9C%AA%E4%BD%BF%E7%94%A8.png" alt="初代-未使用"></p>
<p>什么?这也太丑了吧？你看这色彩，这布局，这裁剪，丑到家了。不过当时可没有人来帮我做设计，就现先这样用吧。</p>
<p>图标有了，凑合能用的程序也有了，那叫什么名字呢？这是关于 星之卡比 的程序，可以用来下资源，你可能认为理所当然的叫 卡比下载器？不不不，根据 <a href="https://www.zhihu.com/question/308116322">母语羞涩原理</a> 当然是叫 Kirby Download 啦！</p>
<h3 id="这就算开始了吧">这就算开始了吧</h3>
<p>然后我就带着这个样子的程序去贴吧发帖了<s>当然因为傻逼百度这贴已经找不到了</s>
<s>对了，图标我换了，长这样</s>
<img src="../../media/article_img/chronicle_of_kirbyassistant/%E5%88%9D%E4%BB%A3-%E4%BD%BF%E7%94%A8%E4%B8%94%E5%87%BA%E7%8E%B0%E8%A7%86%E9%A2%91.png" alt="初代-使用且出现视频">
而且当时还做了个 <a href="https://www.bilibili.com/video/av7053495">视频</a> <s>辣眼睛注意</s></p>
<iframe src="//player.bilibili.com/player.html?aid=7053495&cid=11499734&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 640px; height: 430px; max-width: 100%"> </iframe>
<h2 id="虽然不好用-但-你好-AndroLua-你好-Kirby-Download">虽然不好用 但 你好 AndroLua 你好 Kirby Download</h2>
<h3 id="初识-AndroLua">初识 AndroLua</h3>
<p>时间一天天过着，初代版本也在不断更新<s>虽然没更新多久</s>。可是 iApp 只能拖动的布局已经不能满足我了，我需要更好用的语言，更好用的 ide。迫于当时觉得 Java 入门门槛过于高，正好 AndroLua 又在盛行，我也就选择使用这个来接着编写了。这是一个由 nirenr 一个人改编的，基于 Lua 语言，但是有一些 Java 语法成分的 <a href="https://baike.baidu.com/item/%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80/8888952?fr=aladdin">解释型语言</a>。<s>我估计就是因为太好用，太方便才会有人用的。不过成也方便，败也方便。（指弱类型）</s></p>
<h3 id="崭新的-Kirby-Download">崭新的 Kirby Download</h3>
<p>那用了新的语言，怎么能不重新设计界面呢，首先就是界面大改<s>当然这是测试版界面</s>
<img src="../../media/article_img/chronicle_of_kirbyassistant/ka-%E6%B5%8B%E8%AF%95%E7%89%88%E7%95%8C%E9%9D%A2.png" alt="ka-测试版界面"></p>
<p>新的图标，一定要极简，本文设计，质感设计都要有，于是就有了下面这样
<img src="../../media/article_img/chronicle_of_kirbyassistant/kd-%E5%88%9D%E4%BB%A3%E5%90%8E%E5%88%B00.8%E7%89%88%E6%9C%AC%E5%89%8D.png" alt="kd-初代后到0.8版本前"></p>
<p>这样，Kirby Download<s>钦定的</s>诞生日就有了 2019-1-15</p>
<h3 id="完整的资源">完整的资源</h3>
<p>因为还有学业，所以不能做到日更，所以在周更和双周更的情况下终于在 2017-03-25 收录了绝大部分资源，此时应用界面已经比较现代了<s>并且傻逼一样的给应用名末尾加了个 β</s>
<img src="../../media/article_img/chronicle_of_kirbyassistant/kd-%E8%B5%84%E6%BA%90%E6%9C%80%E7%BB%88%E7%89%88.jpg" alt="kd-资源最终版"></p>
<p>可以说，这个主页列表界面基本上维持到 Lua 版本结束</p>
<p>并且在此之前使用了 fir 托管软件，地址：<a href="https://fir.im/kirby">https://fir.im/kirby</a></p>
<h3 id="跨越-版本-1-0">跨越 版本 1.0</h3>
<p>1.0 算是已经接近 Lua 版本的尾声了，此时发布了一个对今后影响十分巨大的主页界面
<img src="../../media/article_img/chronicle_of_kirbyassistant/ka-1.0.jpg" alt="ka-1.0"></p>
<p>而且在此之前更换了新的图标，不过这个图标没有持续很久使用
<img src="../../media/article_img/chronicle_of_kirbyassistant/kd-0.8%E5%88%B01.0%E7%89%88%E6%9C%AC%E5%89%8D.png" alt="kd-0.8到1.0版本前"></p>
<p>但是这个版本 bug 居多，很多人反映无法使用，所以我很快迭代了</p>
<h3 id="震惊-KD-惨遭被盗">震惊 KD 惨遭被盗</h3>
<p>哈哈哈这个应该是个人开发者必经的，总是会被二次打包的，不过我倒是没有特别在意，只是在贴吧发了 <a href="https://tieba.baidu.com/p/5094724024">这个帖子</a> 而已</p>
<h3 id="虚假的官网">虚假的官网</h3>
<p>在上面那些事情的某个期间，我去一个模板网站制作了一个 <a href="http://kirbydownload.mystrikingly.com/">官网</a> <s>其实就是改改图片，改改文本而已</s></p>
<h3 id="停止支持">停止支持</h3>
<p>不是停止 KD，而是停止版本支持，就在 2017-05-05 这一天发的 <a href="https://tieba.baidu.com/p/5102809713">kirby download Δ</a> 中</p>
<h2 id="你好-Java">你好 Java</h2>
<h3 id="为什么">为什么</h3>
<p>其实 AndrodLua 挺好用的，那么我为什么要换呢？</p>
<blockquote>
<p>扩展性</p>
</blockquote>
<p>是的 AndrodLua 的扩展性十分糟糕，以至于很多新的特性无法使用，在这种情况下我毅然选择了 Java。</p>
<h3 id="停更-但不是永远">停更,但不是永远</h3>
<p>在使用 Java 编写的时候我不得不停止更新 Lua 版本的 KD，不过没有持续很久。不得不说 Java 是安卓开发的主流，我遇到的很多问题都可以得到有效解决，这种前所未有的有效，让我在不到两个月的时间里就搞定了 Java 版本的开发。</p>
<h3 id="手滑的重要性（雾">手滑的重要性（雾</h3>
<p>在 <code>2017-06-20</code> 这天发售了手滑<s>铁卢</s>事件，不过吧，这个时候我已经准备 Java 版本的开发了，所以丢失的 Lua 版本源码也无伤大碍<s>个屁</s>
参阅<a href="https://tieba.baidu.com/p/5174062697">咳咳，我告诉你们啊。。。</a></p>
<h3 id="来了来了-他来了">来了来了,他来了</h3>
<p><code>2017-08-14</code> 这天算是正式发布了 KD 的 Java 版吧，于是乎就有了<a href="https://tieba.baidu.com/p/5272051400">我又来炒冷饭了，虫 ♤ 人一口 虫 ♤ 人一口</a> <s>标题暴力，暗示那位大人偷走了我停更的时间咳咳咳</s>界面如下
<img src="../../media/article_img/chronicle_of_kirbyassistant/kd-java.jpg" alt="kd-Java"></p>
<p>同时这个图标也是从 Lua 版一直用到 Java 版
<img src="../../media/article_img/chronicle_of_kirbyassistant/kd1.0%E5%88%B02.2.3.png" alt="kd1.0到2.2.3"></p>
<h3 id="V2？集合体？Slogan？2018？都是什么">V2？集合体？Slogan？2018？都是什么</h3>
<h4 id="永不弃坑-就是我除非我亏的没钱了">永不弃坑 就是我<s>除非我亏的没钱了</s></h4>
<p><a href="https://tieba.baidu.com/p/5351905548">【绝不弃坑】【游戏资源看这里】kirby download</a> 这个就是集合了一些链接，当时百度<s>傻逼的</s>审核机制还没有那么严格，这种帖子放现在肯定 gg</p>
<h4 id="不仅有游戏">不仅有游戏</h4>
<p>是的，这是从那时确定下来的 slogan 现在看来确实如此</p>
<h3 id="什么什么？用户系统？闲聊？模拟器直接下载吗">什么什么？用户系统？闲聊？模拟器直接下载吗</h3>
<p><code>2017-8-23</code> 也就是 Java 版本发布后，更新了一个让我亏钱至今，甚至濒临几次倒闭的东西，用户系统与文件服务。
确实很好用，比看评论区方便多了。就是……不能回复，至今也不行<s>好尴尬啊</s></p>
<h3 id="3-0-预告">3.0 预告</h3>
<h4 id="真实手绘">真实手绘</h4>
<p>手绘预告，见过没？<a href="https://tieba.baidu.com/p/5519636217">【技术】kirby download3.0 预告</a>就是这么秀，纯手绘，画出 3.0 的大部分想法<s>原稿已丢失</s></p>
<h4 id="除夕夜发布">除夕夜发布</h4>
<p>此时 KD 界面已经是很接近现在的了，具体如图
<img src="../../media/article_img/chronicle_of_kirbyassistant/ka-3.0.jpg" alt="ka-3.0"></p>
<p>以及，真就除夕夜发布<s>正好一周年，蛮有意义的</s>
<a href="https://tieba.baidu.com/p/5551002824">【预热】kirby download3.0，除夕夜发布！！</a>
<a href="https://tieba.baidu.com/p/5552664544">【深夜更新】kirby download3.0</a></p>
<blockquote>
<p>啊，大家好啊
这里炎忍，经过两个月的开发，迎来了 3.0 版本，接下来是更新日志:
duang~
深夜更新 1.新的图标，新的宣传图 2.新的菜单 3.攻略视频添加 4.稳定服务器 5.闲聊优化 6.全局滑动返回 7.优化捐赠 8.优化翻译，修复错误翻译 9.修改整体算法 10.重新设计启动界面 11.针对于安卓 7.1.2 进行优化 12.针对于虚拟按键进行优化 13.针对于安卓 4.4.4 进行优化 14.压缩体积，提升性能 15.进一步优化用户算法
…
更多优化，更新，请进入 app 感受吧！！</p>
</blockquote>
<p>以上的当时的更新日志，也是发帖内容。</p>
<h2 id="再见-Kirby-Download">再见 Kirby Download</h2>
<h3 id="事件">事件</h3>
<p>3.0 更新两天后，由于一些现在不方便描述的的原因<s>因为是 QQ 上发生的事</s>，所以不多做描述。大概就是我被喷了，还是圈内人，然后我又玩玻璃心<s>说实话真的受不住</s>，就这么僵持了几天，我下架了 Kirby Assistant。
<code>2019-2-25</code> 我进行了 <a href="https://github.com/EndureBlaze/kirbydownload/">Kirby Assistant 仓库</a> 的最后一次提交，Commit 信息是 「再见 Kirby download」，这个仓库的 commits 也定格在 53，不再更新</p>
<h3 id="反思">反思</h3>
<p>这个事情过后我也反思自己，也确实做的不够好，如果做的很好，就不会引来别人的这种说法，这么想着，我在 QQ 空间发了如下说说
<img src="../../media/article_img/chronicle_of_kirbyassistant/%E7%A9%BA%E9%97%B4%E6%88%AA%E5%9B%BE.jpg" alt="空间截图">
也算是预告吧</p>
<h2 id="崭新的-你好-Kirby-Assistant">崭新的 你好 Kirby Assistant</h2>
<h3 id="从头来过">从头来过</h3>
<p><code>2019-2-27</code> 我在贴吧发帖<a href="https://tieba.baidu.com/p/5568861528">【资源】Kirby Assistant</a>,这个界面基本定格至今了
<img src="../../media/article_img/chronicle_of_kirbyassistant/ka-%E5%88%9D%E7%89%88.jpg" alt="ka-初版"></p>
<h3 id="新的特性">新的特性</h3>
<p>感谢 AIDE 的更新，让我可以用到诸如自适应图标的新特性，并且在 0.4-beta-1 成功完美适配 AndroidP 这也是截止发文为止最新的 Android 正式版</p>
<h3 id="撇弃旧框架">撇弃旧框架</h3>
<p>分别在 0.4-beta-3 、0.4-beta-6 和 0.4 版中撇弃了旧版本的条条框框，这也是成长最快的时期</p>
<h3 id="新的图标">新的图标</h3>
<p>这是分别在 0.4-beta1
<img src="../../media/article_img/chronicle_of_kirbyassistant/ka-0.4b1%E4%B9%8B%E5%90%8E-%E5%8F%8C%E5%9B%BE%E6%A0%87-%E4%B8%BB%E5%9B%BE%E6%A0%87-hk%E6%B5%81%E6%98%9F.png" alt="ka-0.4b1 之后-双图标-主图标-hk流星">
和 0.4-beta2
<img src="../../media/article_img/chronicle_of_kirbyassistant/ka-0.4b2%E5%90%8E-%E5%8F%8C%E5%9B%BE%E6%A0%87-%E5%89%AF%E5%9B%BE%E6%A0%87-Markuss.png" alt="ka-0.4b2 后-双图标-副图标-Markuss">
的图标，直到目前我也是最喜欢的两个，后面做成了双图标模式</p>
<h2 id="未来·炫动">未来·炫动</h2>
<p>现在，撇弃百度贴吧与 QQ，舞台交给 GitHub</p>
<h3 id="全新的-KA">全新的 KA</h3>
<p>2018-12-9 我推出了全新版本的 KA ——未来·炫动，这个版本拥有诸多特性，完整的 AndroidP API，完整的自适应图标，双镜像仓库，以及最重要的新服务器结构<s>虽然后面还让我丢数据了</s>
如果说 0.4 大版本是 KA 发展最快的时期，那未来·炫动一定是我最推荐的版本</p>
<h3 id="更新">更新</h3>
<p>1.2.6（Build 29）引入的更新一定是最刚需的，往往程序更新了却不知道，这次，他来了，引入 Build 比较概念，让你随时都能用上新版本</p>
<h3 id="全新架构-PBL">全新架构 PBL</h3>
<p>如果说更新是刚需，让你享受新特性，那么 1.2.1（Build 24） 引入的全新服务器架构和 PBL 一定是更稳定的前提。前者拥有更快的响应速度，后者不会对用户有任何影响，但是会让我维护更方便<s>这不是你丢失服务器数据的理由</s></p>
<h3 id="无延迟启动">无延迟启动</h3>
<p>1.2（Build 23）引入的全新启动模式，根据 AndroidP API 编写，适配新特性，毫秒级启动速度</p>
<h3 id="全新网站">全新网站</h3>
<p>这不是程序更新的范畴，但是息息相关
<code>2019-2-15</code> 这天我买了域名<a href="https://endureblaze.cn">https://endureblaze.cn</a>并且把 Kirby Assistant 的官网定为<a href="https://ka.endureblaze.cn">https://ka.endureblaze.cn</a></p>
<h3 id="更全新的图标">更全新的图标</h3>
<p>在 1.2.7 版本我合并了两个图标并且 hk 流星 进行了微调
<img src="../../media/article_img/chronicle_of_kirbyassistant/ka-1.2.7%E5%90%8E-%E7%8E%B0%E7%94%A8-hk%E6%B5%81%E6%98%9F%E9%87%8D%E7%BB%98.png" alt="ka-1.2.7后-现用-hk流星重绘">
这也是到目前为止一直使用的图标</p>
<h3 id="AndroidX，MD2，以及更小的体积">AndroidX，MD2，以及更小的体积</h3>
<p>我购买了电脑，这让我可以跟方便的编写程序，更是把 Kirby Assistant 的体积压缩到更小</p>
<h2 id="炫动了，未来呢">炫动了，未来呢</h2>
<p>我想，我会一直保持不定期更新，这个程序我暂时不可能放弃的，即使再亏钱</p>
<h2 id="未完待续">未完待续</h2>
<p>革命尚未完成，同志仍需努力</p>
<h3 id="我还想说">我还想说</h3>
<p>Kirby Assistant 发展两年多来，实数不易，这让我也了解到生活的不易。是啊，谁都不好过，所以，希望以后还能多多下载，推荐给你身边玩星之卡比的人，或者，带 Ta 入坑</p>
<h2 id="感谢名单">感谢名单</h2>
<blockquote>
<p>这是在 Kirby Assistant 发展道路上帮助过我的人，如果有疏漏，请联系我补充</p>
</blockquote>
<p><strong>排名无先后之分</strong>
点击名字可以跳转链接(如果有)</p>
<ul>
<li><strong>感谢在这个过程中所有给予我鼓励的人</strong></li>
<li><strong>感谢每一个捐赠者</strong></li>
<li>感谢<a href="https://github.com/longxk2017"><strong>longxk2017</strong></a>(GithHub)进行<strong>繁体中文翻译</strong></li>
<li>感谢<a href="https://www.coolapk.com/u/555883"><strong>hk 流星</strong></a>(酷安)进行<strong>图标绘制</strong></li>
<li>感谢<a href="https://www.coolapk.com/u/529718"><strong>Markuss</strong></a>(酷安)进行<strong>图标绘制</strong></li>
<li>感谢<a href="http://tieba.baidu.com/home/main?un=%E5%85%89%E4%B9%8B%E8%80%80%E8%A5%BF"><strong>光之耀西</strong></a>(百度贴吧)进行<strong>英文翻译</strong></li>
<li>感谢<a href="http://tieba.baidu.com/home/main?un=%E9%9A%BE%E9%9A%BE%E9%9A%BE550"><strong>难难难 550</strong></a>(百度贴吧)进行<strong>英文翻译</strong></li>
<li>感谢<a href="http://tieba.baidu.com/home/main?un=%E8%9D%99%E8%9D%A0%E4%BE%A0%E9%AA%91%E6%91%A9%E6%89%98"><strong>蝙蝠侠骑摩托车</strong></a>(百度贴吧)的<strong>资源投放</strong></li>
<li>感谢<a href="http://tieba.baidu.com/home/main?un=%E2%98%85%E2%98%86%E5%B0%8F%E4%BC%8A%E5%B8%83%E2%98%86%E2%98%85"><strong>★☆ 小伊布 ☆★</strong></a>(百度贴吧)进行<strong>图标绘制</strong></li>
<li>感谢<a href="http://www.shaoxudong.com"><strong>邵旭东</strong></a>(个人主页)提供的<strong>备案域名</strong></li>
<li>感谢<a href="https://github.com/lxfly2000"><strong>lxfly2000</strong></a>(GitHub)进行的<strong>程序协助</strong></li>
<li>感谢<a href="https://www.coolapk.com/u/1157774"><strong>塔林狐</strong></a>(酷安)进行<strong>编写 FAQ</strong></li>
<li>感谢<a href="https://space.bilibili.com.13001252"><strong>虚影无华</strong></a>(哔哩哔哩动画)制作的 <strong>星之卡比 100%计划</strong> 系列视频</li>
<li>感谢<a href="http://tieba.baidu.com/home/main?un=%E6%A2%A6%E6%83%B3%E5%8D%A1%E6%AF%94"><strong>梦想卡比</strong></a>(百度贴吧)进行<strong>早期版本测试</strong></li>
<li>感谢<a href="http://tieba.baidu.com/home/main?un=osxm9"><strong>oxsm9</strong></a>(百度贴吧)的 <strong>红米 2A</strong></li>
<li>感谢更多我应该感谢但记不住名字及人以及<strong>感谢我的父母</strong></li>
</ul>
]]></content>
      <categories>
        <category>我的 Android 应用</category>
      </categories>
      <tags>
        <tag>编年史</tag>
      </tags>
  </entry>
  <entry>
    <title>偶然间在B站看到的鬼畜</title>
    <url>/posts/d46d4e39/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>刚才逛 B 站的时候在首页偶然看到这个，播放量还挺高的，就点进去看看了。神级填词，现在的老哥们简直神了，真的容易引起共鸣，然后又想起了以前的一些事，诶。</p>
<span id="more"></span>
<p>不多说啥了，做好现在的自己，不偏离本心！</p>
<p>视频地址：<a href="https://www.bilibili.com/video/av60731116/">https://www.bilibili.com/video/av60731116/</a></p>
<iframe src="//player.bilibili.com/player.html?aid=60731116&cid=106015992&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 640px; height: 430px; max-width: 100%"> </iframe>
<blockquote>
<p><strong>贴一个里面的评论</strong>
曾经看到大学宿舍里的沙雕图片，一个光膀大汉法相庄严，后面的人伸出手摆成千手佛陀，下面有句热评：</p>
<p>“珍惜现在的时光吧，能陪你一起沙雕的朋友已经越来越少了。”</p>
<p>欢乐是如何消失的呢，海绵宝宝？</p>
<p>当你变成正常人、长大的时候，它就和你告了别。</p>
<p>我喜欢什么都不做，喜欢追求最天真的快乐。
闭眼数数和我一般如星星闪耀的天才，可是只有我一个派大星。
知道我找到了另一颗星星，你，海绵宝宝。愿意和我一起享受快乐。
我不知道为什么他们说我是废物。
我不知道为什么太阳西边是落处。
我不知道为什么章鱼哥追求艺术。
我不知道为什么蟹老板攒钱如土。
即便抽不中想要的角色，我们却有辆小汽车。
即便驾照总是触不可及，我们也能玩摇摇乐。
即便去抓水母邻居遭殃，我们还在享受快乐。
当人们追求自己喜欢的东西的时候，为什么你渐行渐远了呢。
即便你有喜爱的工作、支持你的朋友、爱你的家人、听话的小窝和大把的青春值得去奋斗，我却发现你不再快乐，生病了。
你说想要变回常人。
你说羡慕章鱼哥受人景仰。
你说羡慕蟹老板家财万贯。
你说抓水母让章鱼哥愤怒。
你说想要的角色难以抽到。
你说不考驾照快乐受了限。
我最好的朋友，你这样我也很难受。
当我看到那电章鱼哥的水母，我一定要抓到。
当我再去商场终于抽到角色，你一直想要的。
当我考来驾照坐上那小汽车，想和你去冒险。
于是我带着这些再次找到你。
直到见到你漂亮的房子。
见到你成团的宾客。
见到你光鲜的衣服。
见到你贵气的打扮。
听到你说我嫉妒新生活的话语。
感受到被丢出去的失落。</p>
<p>欢乐是如何消失的呢，海绵宝宝？</p>
</blockquote>
]]></content>
      <categories>
        <category>碎碎念</category>
      </categories>
      <tags>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用 Dolphin Emulator 玩《星之卡比：Wii》</title>
    <url>/posts/2fbba4ed/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>开头附上星之卡比系列的 <a href="https://eyun.baidu.com/s/3i51Jf17">下载地址</a> 还有 Wii 模拟器的 <a href="https://cn.dolphin-emu.org/">下载地址</a></p>
</blockquote>
<h2 id="白屏">白屏</h2>
<p>有些小伙伴在下好游戏并且在模拟器打开之后会遇到一直卡在白屏的情况，如图</p>
<p><img src="../../media/article_img/how2_use_dolphin_play_kirbywii/%E5%8D%A1%E5%9C%A8%E7%99%BD%E5%B1%8F.png" alt="卡在白屏"></p>
<p>那么这个时候就要注意是不是模拟器语言设置的问题，我们可以在这里看到游戏的语言</p>
<p><img src="../../media/article_img/how2_use_dolphin_play_kirbywii/%E6%9F%A5%E7%9C%8B%E8%AF%AD%E8%A8%80.png" alt="查看语言"></p>
<p>那么可以看到这个语言是 <code>日语</code>，那我们就要把模拟器改成对应的，看图操作，找到 <code>设置 -&gt; Wii -&gt; 系统语言</code>，然后在下拉菜单里找到 <code>对应语言</code>，然后点击关闭即可</p>
<p><img src="../../media/article_img/how2_use_dolphin_play_kirbywii/%E4%BF%AE%E6%94%B9%E8%AF%AD%E8%A8%80.png" alt="修改语言"></p>
<p>现在开始游戏就可以正常运行了</p>
<p><img src="../../media/article_img/how2_use_dolphin_play_kirbywii/%E6%AD%A3%E5%B8%B8%E8%BF%90%E8%A1%8C.png" alt="正常运行"></p>
<h2 id="无法进入">无法进入</h2>
<p>那有时候还会出现无法进入游戏界面的情况，会有类似下面这样的提示</p>
<p><img src="../../media/article_img/how2_use_dolphin_play_kirbywii/%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5.png" alt="无法进入"></p>
<p>那这个情况只需要去 <code>控制器 -&gt; Wii 遥控器</code> 然后点击你要是用的模拟手柄的设置，将 <code>扩展</code> 这一项改成无就可以，看图操作</p>
<p><img src="../../media/article_img/how2_use_dolphin_play_kirbywii/%E4%BF%AE%E6%94%B9%E6%89%A9%E5%B1%951.png" alt="修改扩展1"></p>
<p><img src="../../media/article_img/how2_use_dolphin_play_kirbywii/%E4%BF%AE%E6%94%B9%E6%89%A9%E5%B1%952.png" alt="修改扩展2"></p>
<p>现在再试试进入游戏就正常了</p>
<p><img src="../../media/article_img/how2_use_dolphin_play_kirbywii/%E6%AD%A3%E5%B8%B8%E8%BF%90%E8%A1%8C.png" alt="正常运行"></p>
]]></content>
      <categories>
        <category>星之卡比系列教程</category>
      </categories>
      <tags>
        <tag>星之卡比</tag>
        <tag>星之卡比 Wii</tag>
        <tag>Wii 模拟器</tag>
        <tag>Dolphin Emulator</tag>
      </tags>
  </entry>
  <entry>
    <title>开往 - Travellings</title>
    <url>/posts/58ae8d54/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="什么是开往">什么是开往</h2>
<p>这是一个来自于国外的想法，在网站显眼的位置，加入一个认证的徽标，代表网站已经加入了友链助力，如果访客点击徽标，将随机前往另一个计划内的网站。</p>
<h2 id="为什么要开往">为什么要开往</h2>
<p>互联网将人与人之间的距离大大减小，却还是形成了大大小小的孤岛。只有熟人间才知道彼此，而陌生人永远只能是陌生人。</p>
<blockquote>
<p>“开往”取自“开放的网络”。 将一群志同道合的人连接在一起，我们共享彼此的流量，帮助陌生人发现新大陆。</p>
</blockquote>
<p>开往-友链助力是传统友链的增强，我们不必互相知道了解彼此，标准的审查让友好的朋友加入我们，只需要一个徽标，占用一块位置，我们所有人都联系在了一起，简单而又强大。大大小小的孤岛散落在浩瀚烟海，开往就像是一颗颗星球之间的快速列车，随机的跳向下一站。</p>
<h2 id="怎么加入开往">怎么加入开往</h2>
<a class="btn-beautify " href="https://github.com/volfclub/travellings" 
  title="开往-友链接力"><i class="block center larger"></i><span>开往-友链接力</span></a>
<p>这是项目的 Github 地址，在 issue 中提交申请，几日内就会受理。但是申请的网站必须满足几点要求：</p>
<ol>
<li>愿为开放的网络做出贡献（如分享知识经验设计等）；</li>
<li>没有违法以及影响体验的内容（如侵入式广告等）；</li>
<li>正常更新维护中（国内无法正常访问会被移除）；</li>
<li>强制启用 https 。</li>
</ol>
<p>满足以上要求，并将徽标插入您网页<strong>明显的地方</strong>（让友链传递下去）。</p>
<p><strong>下面就是通向异域的按钮。</strong></p>
<p><a href="https://travellings.link/" target="blank"><img src="https://travellings.link/assets/logo.gif" alt="开往-友链接力" width="120"></a></p>
]]></content>
      <categories>
        <category>正经文字</category>
      </categories>
      <tags>
        <tag>开往</tag>
      </tags>
  </entry>
  <entry>
    <title>怎么呼吸</title>
    <url>/posts/b0821049/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>不能呼吸的时候
是不是很难受？
这只海龟也是这么觉得的
<img src="../../media/article_img/how2_breathe/%E6%B5%B7%E9%BE%9F.jpg" alt="image">
<strong>怎么救它？</strong>
尽量不去用一次性的塑料产品
比如 不买一次性塑料袋
喝饮料的时候不要用吸管
放一双公筷
点外卖的时候选择「不要餐具」
随身带一个保温杯
不强求一步到位
也不去强迫别人
改变
从自身的一点点
到地球的「亿」点点</p>
]]></content>
      <categories>
        <category>正经文字</category>
      </categories>
      <tags>
        <tag>环保</tag>
        <tag>塑料产品</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么说宣扬读书无用论的人要么蠢要么坏？</title>
    <url>/posts/e9558acf/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>告诉别人「读书无用」的人，也许他们真的没读过什么书，因为一些机缘巧合，或者家庭资源帮扶，让他们得到了一些成就。</p>
<p>但你没办法像他们那么幸运。</p>
<p>读书面对强者，应该是锦上添花；对弱者，应当是雪中送炭。</p>
<p>读书不单是指文化课，我们需要的是一直保持持续学习的习惯。</p>
<p>如果你丧失了持续吸收新鲜事物的技能，那你的生活就会处在一个瓶颈。</p>
<p>这个时候，你就会发现你身边的傻逼上司，傻逼同事和傻逼的朋友，都会层出不穷。</p>
<p>但你跳不开这个境地，因为你真的相信了读书无用，换言之，你智商也不怎么地。</p>
]]></content>
      <categories>
        <category>正经文字</category>
      </categories>
      <tags>
        <tag>读书</tag>
        <tag>学习</tag>
        <tag>读书无用论</tag>
      </tags>
  </entry>
  <entry>
    <title>不一样又怎样</title>
    <url>/posts/7935321c/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>每一个不一样的人，背后都有一个爱他的人</p>
</blockquote>
<h2 id="纪录片视频">纪录片视频</h2>
<iframe style="width: 640px; height: 430px; max-width: 100%" src="https://www.youtube.com/embed/V_M9ZId2QAY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<p>墙内用户请点击 <a href="https://www.bilibili.com/video/av31143991?p=2">这里</a></p>
<h2 id="正文">正文</h2>
<p>纪录片《不一样又怎样》中的台湾少年叶永志被称为玫瑰少年。因为经常被说行为举止不男不女，被老师要求去看医生，还长期遭到同学们的霸凌。终于在一次群体性的霸凌事件中，叶永志再也没睁开眼。</p>
<p>叶永志去世后，叶妈妈决心要找出杀人凶手，却被谙熟校园霸凌事件的检察官告知，这样的案件，最后的被告均为无罪。后来叶妈妈就成了那些与众不同孩子们的倾诉对象，她收到了很多书信，字字血泪，每一封都透露出「我被人说是怪胎」，「我想我自杀」。</p>
<p>杨永信的电击网戒中心承接各种不听话的孩子，早恋的、网瘾的、逃课的、打麻将；少年、少女、成年人、老年人被家长朋友亲戚夫妻争先恐后的送上电击床。</p>
<p>那些人不能接受的，真的只是娘娘腔的吗？不是。他们只是不能接受别人的不一样，今天能把一个所谓「娘娘腔」的男孩子霸凌致死，明天就可能高喊着女生不能涂太鲜艳的口红，而把更多人拽入深渊。</p>
<p>叶妈妈在宣讲会上说，我们没有错，我们不要哭，我们要向李阳光争取我们自己的权利，我们所有生而为人的权利全部都败在了一个个杨永信的手中。</p>
<p>为什么要那么惧怕那么憎恶多元的人呢？正因为多元世界才精彩不是吗？那些爱化妆的男孩子，那些剪短头发的女孩子，那些高中是传情书的学生们，都不是社会的毒瘤，而是那些想要用尽一切手段去定义别人一生的人。</p>
<blockquote>
<p>勇敢做自己</p>
</blockquote>
]]></content>
      <categories>
        <category>正经文字</category>
      </categories>
      <tags>
        <tag>LGBT</tag>
      </tags>
  </entry>
  <entry>
    <title>我为什么要搭建博客</title>
    <url>/posts/a6366ad5/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>即使最后没有人为你鼓掌，也要优雅地谢幕，感谢自己的认真付出。</p>
</blockquote>
<p>我觉得自建博客＋个人域名是树立个人品牌的一个重要步骤，试想别人通过搜索到你的个人网站并联系你的时候，说明个人品牌已经初步建立了。</p>
<p>但如果仅仅把它形容为「进入现在行业的敲门砖与踏脚石」，这个说法也是不够算是完整的。社交网站、写作平台都是别人的，你拥有的是写的权利跟一个 Profile 页面，写出来的文档都不属于你，而是平台的，这太讽刺了。你获得多少关注不一定直接跟你的写作内容有关，吸引的读者更多是跟平台有关而不是个人有关。</p>
<p>每次打开博客会有种莫名有种归属感。城市太闹，微博太糟，幸好还有一个没人知晓的博客，在不愿让人知道的那天，任由自己的情绪倾倒。我想这就是博客存在的意义吧。</p>
<p>博客是你的，哪怕它再破落，访问量再低，狗不嫌家穷。只要你不放弃，到你八十三岁的时候，他仍然会在那里。从这个角度，它承载了记录的功能，它是你人生经历在时间上的痕迹，你可能说 印象笔记 也可以，但凭心而论「我宁愿相信 Hexo 活得会比前者（印象笔记）更久」，因为一切重平台的产品都会因为各种复杂的原因消失殆尽。即便 Hexo 停止更新，我也仍然可以搭一个环境让它跑起来，文章都在你身边存放着，它只是一个开源程序，让大家有写作的乐趣。</p>
<p>除了记录，独立博客就是「你」，你选择什么域名，使用什么主题，多大的字号，全文输出还是截断输出，使用哪家 Feed 托管，你也许会在 Feed 尾部用插件加上一朵小菊花，你甚至可以推荐一款你喜欢的同性恋应用给大家而不用担心被删除。</p>
<p>这就是我想要表达的，「这一切都是因为你，同时也呈现你」，它是一个专属于你自己的写作、记录、呈现的地方。它叫博客，但又不只是博客，以前在其他平台写博客是为了很多东西，现在自己搭建写博客只是为了一种生活习惯，少论道，多说常识跟生活。</p>
<p>这大概就是我对于个人搭建博客的看法了，也是为什么我要去搭建博客。</p>
]]></content>
      <categories>
        <category>正经文字</category>
      </categories>
      <tags>
        <tag>为什么</tag>
        <tag>看法</tag>
      </tags>
  </entry>
  <entry>
    <title>动态替换 ViewPager 里面的 Fragment</title>
    <url>/posts/6b0c894/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>最近在重写 Kirby Assistant 过程中又遇到了需要动态替换 ViewPager 的某个 Fragment 的需求，因为之前的是直接在同一个布局里暴力替换的，但是这次因为是用其他方法实现的，当然不能用以前的方法了，摸索了一段时间后终于搞定了，现在把可以用的方法放在下面</p>
<h3 id="准备过程">准备过程</h3>
<p>首先需要在布局中添加 ViewPager</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.viewpager.widget.ViewPager</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/main_fragment_viewpager&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后给 ViewPager 写一个 ViewPagerAdapter 并且继承自 FragmentPagerAdapter</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">FragmentPagerAdapter</span> &#123;</span><br><span class="line"><span class="comment">//其他东西</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="重写-ViewPagerAdapter">重写 ViewPagerAdapter</h3>
<p>具体看代码的注释，有注释的都是需要注意的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">FragmentPagerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FragmentManager fm;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Fragment&gt; fragments;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; page_title;<span class="comment">//这个是对应碎片的标题，可以不需要</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ViewPagerAdapter</span><span class="params">(FragmentManager fm, List&lt;Fragment&gt; fragments,List&lt;String&gt; page_title)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(fm);</span><br><span class="line">        <span class="built_in">this</span>.fm=fm;</span><br><span class="line">        <span class="built_in">this</span>.fragments=fragments;</span><br><span class="line">        <span class="built_in">this</span>.page_title=page_title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意这个方法，这个是配置你在哪个碎片上进行替换</span></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">instantiateItem</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup container, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="comment">//这里的判断说明的是在三个和第四个碎片上替换</span></span><br><span class="line">        <span class="keyword">if</span> (position == <span class="number">2</span>||position == <span class="number">3</span>)</span><br><span class="line">            removeFragment(container,position);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.instantiateItem(container, position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个方法就是通过 Tag 来判断碎片是不是原来的，如果不是就进行替换</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">removeFragment</span><span class="params">(ViewGroup container,<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tag</span> <span class="operator">=</span> getFragmentTag(container.getId(), index);</span><br><span class="line">        <span class="type">Fragment</span> <span class="variable">fragment</span> <span class="operator">=</span> fm.findFragmentByTag(tag);</span><br><span class="line">        <span class="keyword">if</span> (fragment == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">FragmentTransaction</span> <span class="variable">ft</span> <span class="operator">=</span> fm.beginTransaction();</span><br><span class="line">        ft.remove(fragment);</span><br><span class="line">        ft.commit();</span><br><span class="line">        ft = <span class="literal">null</span>;</span><br><span class="line">        fm.executePendingTransactions();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Fragment <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> fragments.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> fragments.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意写成这样才可以进行刷新</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemPosition</span><span class="params">(<span class="meta">@NonNull</span> Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> PagerAdapter.POSITION_NONE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CharSequence <span class="title function_">getPageTitle</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> page_title.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//禁止销毁view达到复用</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroyItem</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup container, <span class="type">int</span> position, <span class="meta">@NonNull</span> Object object)</span> &#123;&#125;</span><br><span class="line">    <span class="comment">//获取碎片的tag</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getFragmentTag</span><span class="params">(<span class="type">int</span> viewId, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;FragmentPagerAdapter&gt; cls = FragmentPagerAdapter.class;</span><br><span class="line">            Class&lt;?&gt;[] parameterTypes = &#123; <span class="type">int</span>.class, <span class="type">long</span>.class &#125;;</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getDeclaredMethod(<span class="string">&quot;makeFragmentName&quot;</span>,</span><br><span class="line">                    parameterTypes);</span><br><span class="line">            method.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">tag</span> <span class="operator">=</span> (String) method.invoke(<span class="built_in">this</span>, viewId, index);</span><br><span class="line">            <span class="keyword">return</span> tag;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="注意问题">注意问题</h3>
<p>如果出现替换后出现某个碎片的布局空白了，那就设置一个 ViewPager 的缓存属性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">main_fragment_viewpager.setOffscreenPageLimit(<span class="number">4</span>);<span class="comment">//4代表缓存4页，根据实际情况调整</span></span><br></pre></td></tr></table></figure>
<h3 id="结尾">结尾</h3>
<p>如果有代码什么问题可以向我提出</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>踩坑</tag>
        <tag>Android</tag>
        <tag>ViewPager</tag>
        <tag>Fragment</tag>
      </tags>
  </entry>
  <entry>
    <title>诡辩术</title>
    <url>/posts/sophistry/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><!-- ![诉诸匿名权威](https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/1_%E8%AF%89%E8%AF%B8%E5%8C%BF%E5%90%8D%E6%9D%83%E5%A8%81.jpg) -->
<div class="note info flat"><p>来源 <a href="https://informationisbeautiful.net/visualizations/rhetological-fallacies/">Rhetological Fallacies – A list of Logical Fallacies &amp; Rhetorical Devices with examples — Information is Beautiful</a><br>
更多参考 <a href="https://zh.wikipedia.org/wiki/%E8%AC%AC%E8%AA%A4%E5%88%97%E8%A1%A8">谬误列表 - 维基百科，自由的百科全书</a><br>
图片打包下载 <a href="https://github.com/EndureBlaze/Sophistry">https://github.com/EndureBlaze/Sophistry</a><br>
<strong>部分</strong>小标题点击可以跳转 Wikipedia 查看详细解析 <sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Norm (philosophy) - Wikipedia](https://en.wikipedia.org/wiki/Norm_(philosophy))
">[1]</span></a></sup><sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[分类:非形式谬误 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/Category:%E9%9D%9E%E5%BD%A2%E5%BC%8F%E8%AC%AC%E8%AA%A4)
">[2]</span></a></sup><sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[分类:谬误 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/Category:%E8%AC%AC%E8%AA%A4)
">[3]</span></a></sup><sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[诡辩 - 维基百科，自由的百科全书](https://zh.wikipedia.org/wiki/%E8%A9%AD%E8%BE%AF)
">[4]</span></a></sup></p>
</div>
<h2 id="“晓之以理”">“晓之以理”</h2>
<h3 id="诉诸匿名权威"><a href="https://zh.wikipedia.org/wiki/%E8%A8%B4%E8%AB%B8%E6%AC%8A%E5%A8%81">诉诸匿名权威</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/1_%E8%AF%89%E8%AF%B8%E5%8C%BF%E5%90%8D%E6%9D%83%E5%A8%81.jpg" alt="诉诸匿名权威"></p>
<blockquote>
<p><strong>引用来源不详的“ 砖家”、“研究”或某一群体（比如“科学家”）以声称某观点是正确的。</strong><br>
<em>“他们说要花7年才能消化一片口香糖。”</em></p>
</blockquote>
<h3 id="诉诸（可疑）权威">诉诸（可疑）权威</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/2_%E8%AF%89%E8%AF%B8(%E5%8F%AF%E7%96%91)%E6%9D%83%E5%A8%81.jpg" alt="诉诸（可疑）权威"></p>
<blockquote>
<p><strong>因为某个无实无信的“专家”说某件事是真的，因而断言确实如此。</strong><br>
<em>“超过400位杰出的科学家与工程师对全球变暖持争议态度。”</em></p>
</blockquote>
<h3 id="诉诸常规">诉诸常规</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/3_%E8%AF%89%E8%AF%B8%E5%B8%B8%E8%A7%84.jpg" alt="诉诸常规"></p>
<blockquote>
<p><strong>因为常见，所以正确。</strong><br>
<em>“这家银行有些贪污腐败方面的问题。但在这里发生的事不是在哪家银行都在发生嘛。”</em></p>
</blockquote>
<h3 id="诉诸无知"><a href="https://zh.wikipedia.org/wiki/%E8%A8%B4%E8%AB%B8%E7%84%A1%E7%9F%A5">诉诸无知</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/4_%E8%AF%89%E8%AF%B8%E6%97%A0%E7%9F%A5.jpg" alt="诉诸无知"></p>
<blockquote>
<p><strong>某一观点是正确的，仅仅因为它没有被证伪（或某观点是错误的，仅仅因为它尚未被证实）</strong><br>
<em>“没人能证明有上帝。所以没有上帝。”</em></p>
</blockquote>
<h3 id="诉诸怀疑">诉诸怀疑</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/5_%E8%AF%89%E8%AF%B8%E6%80%80%E7%96%91.jpg" alt="诉诸怀疑"></p>
<blockquote>
<p><strong>因为某件事听起来不可信，所以一定不是真的。</strong><br>
<em>“眼睛是超级复杂的生物机械之作，有千万个紧密联系的部件。如果没有一位睿智的设计师，这怎么可能存在？”</em></p>
</blockquote>
<h3 id="身价逻辑">身价逻辑</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/6_%E8%BA%AB%E4%BB%B7%E9%80%BB%E8%BE%91.jpg" alt="身价逻辑"></p>
<blockquote>
<p><strong>如果某人很有钱，或者某样东西很贵，那么这就对某一论断的真实性造成了影响。</strong><br>
<em>“如果这玩意儿更贵的话，那它一定更好。”</em></p>
</blockquote>
<h3 id="求新逻辑">求新逻辑</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/7_%E6%B1%82%E6%96%B0%E9%80%BB%E8%BE%91.jpg" alt="求新逻辑"></p>
<blockquote>
<p><strong>因为是最新的，所以更好。</strong><br>
<em>“太棒了！最新的操作系统会让我的电脑跑得更快的…”</em></p>
</blockquote>
<h3 id="诉诸主流">诉诸主流</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/8_%E8%AF%89%E8%AF%B8%E4%B8%BB%E6%B5%81.jpg" alt="诉诸主流"></p>
<blockquote>
<p><strong>认定某件事是真的，因为大多数人都这么相信。</strong><br>
<em>“喝牛奶能使你骨骼强健。”</em></p>
</blockquote>
<h3 id="诉诸概率">诉诸概率</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/9_%E8%AF%89%E8%AF%B8%E6%A6%82%E7%8E%87.jpg" alt="诉诸概率"></p>
<blockquote>
<p><strong>相信因为某件事情可能发生，所以必然会发生。</strong><br>
<em>“宇宙里有数不清的星系，无数多的星星。一定有另一颗行星孕育了智慧生命。”</em></p>
</blockquote>
<h3 id="诉诸传统">诉诸传统</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/10_%E8%AF%89%E8%AF%B8%E4%BC%A0%E7%BB%9F.jpg" alt="诉诸传统"></p>
<blockquote>
<p><strong>声称某件事是正确的，因为（很显然）一直以来都是这样。</strong><br>
<em>“婚姻是男与女的结合。因此同性婚姻毫无根据。”</em></p>
</blockquote>
<h2 id="“动之以情”">“动之以情”</h2>
<h3 id="掩耳盗铃"><a href="https://zh.wikipedia.org/wiki/%E6%8E%A9%E8%80%B3%E7%9B%9C%E9%88%B4%E8%AC%AC%E8%AA%A4">掩耳盗铃</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/11_%E6%8E%A9%E8%80%B3%E7%9B%97%E9%93%83.jpg" alt="掩耳盗铃"></p>
<blockquote>
<p><strong>声称某个观点是错误的，因为你不愿意相信那所意味的事实。</strong><br>
<em>“他不可能就是为了骗我的钱。他说过他爱我的，他一定是遭到了什么变故。”</em></p>
</blockquote>
<h3 id="诉诸恐惧"><a href="https://zh.wikipedia.org/wiki/%E8%A8%B4%E8%AB%B8%E6%81%90%E6%87%BC">诉诸恐惧</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/12_%E8%AF%89%E8%AF%B8%E6%81%90%E6%83%A7.jpg" alt="诉诸恐惧"></p>
<blockquote>
<p><strong>煽动对一方的恐惧与偏见，从而进行论证。</strong><br>
<em>“在你意识到之前，清真寺的数目就会超过教堂了。”</em></p>
</blockquote>
<h3 id="诉诸谄媚"><a href="https://zh.wikipedia.org/wiki/%E8%A8%B4%E8%AB%B8%E8%AB%82%E5%AA%9A">诉诸谄媚</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/13_%E8%AF%89%E8%B0%84%E5%AA%9A.jpg" alt="诉诸谄媚"></p>
<blockquote>
<p><strong>给毫无根据的论点裹上糖衣炮弹，让人不自觉地全盘接受。</strong><br>
<em>“聪明又有洞察力的读者当然在读到这样的谬误时就能马上发觉。”</em></p>
</blockquote>
<h3 id="诉诸自然"><a href="https://zh.wikipedia.org/wiki/%E8%A8%B4%E8%AB%B8%E8%87%AA%E7%84%B6">诉诸自然</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/14_%E8%AF%89%E8%AF%B8%E8%87%AA%E7%84%B6.jpg" alt="诉诸自然"></p>
<blockquote>
<p><strong>通过与“至善”的自然界的对比，来使你的观点看起来更站得住脚。</strong><br>
<em>“同性恋当然违背天性。你看不到同性动物交配吧。”</em></p>
</blockquote>
<h3 id="诉诸同情"><a href="https://zh.wikipedia.org/wiki/%E8%A8%B4%E8%AB%B8%E6%86%90%E6%86%AB">诉诸同情</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/15_%E8%AF%89%E8%AF%B8%E5%90%8C%E6%83%85.jpg" alt="诉诸同情"></p>
<blockquote>
<p><strong>唤起人们的怜悯之心，以动摇对手。</strong><br>
<em>“前独裁者已垂垂老矣，濒临末年。让他为这些指控接受审判实在不应该。”</em></p>
</blockquote>
<h3 id="诉诸荒谬"><a href="https://zh.wikipedia.org/wiki/%E8%A8%B4%E8%AB%B8%E8%8D%92%E8%AC%AC">诉诸荒谬</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/16_%E8%AF%89%E8%AF%B8%E8%8D%92%E8%B0%AC.jpg" alt="诉诸荒谬"></p>
<blockquote>
<p><strong>将对手的观点以荒谬的形式表现出来以进行打击。</strong><br>
<em>“对上帝的忠诚就如同相信有圣诞老人和牙仙一样。”</em></p>
</blockquote>
<h3 id="诉诸仇恨"><a href="https://zh.wikipedia.org/wiki/%E8%A8%B4%E8%AB%B8%E4%BB%87%E6%81%A8">诉诸仇恨</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/17_%E8%AF%89%E8%AF%B8%E4%BB%87%E6%81%A8.jpg" alt="诉诸仇恨"></p>
<blockquote>
<p><strong>因为个人偏见而对某一看法不屑一顾。</strong><br>
<em>“富二代搞慈善？算了吧，反正还不是在做秀。”</em></p>
</blockquote>
<h3 id="一厢情愿"><a href="https://zh.wikipedia.org/wiki/%E4%B8%80%E5%BB%82%E6%83%85%E9%A1%98">一厢情愿</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/18_%E4%B8%80%E5%8E%A2%E6%83%85%E6%84%BF.jpg" alt="一厢情愿"></p>
<blockquote>
<p><strong>认为一件事是真的或假的，仅仅因为你情愿想当然。</strong><br>
<em>“主席是不会犯错的。他是人民的领袖，红旗的舵手。”</em></p>
</blockquote>
<h2 id="错误推论">错误推论</h2>
<h3 id="轶事证据"><a href="https://zh.wikipedia.org/wiki/%E8%BB%BC%E4%BA%8B%E8%AD%89%E6%93%9A">轶事证据</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/19_%E8%BD%B6%E4%BA%8B%E8%AF%81%E6%8D%AE.jpg" alt="轶事证据"></p>
<blockquote>
<p><strong>对系统性研究下得出的证据视而不见，反而集中在手头的个例上。</strong><br>
<em>“我才不戒烟呢。我爷爷每天抽40根，还活到了90岁！”</em></p>
</blockquote>
<h3 id="合成谬误"><a href="https://zh.wikipedia.org/wiki/%E5%90%88%E6%88%90_(%E8%AC%AC%E8%AA%A4)">合成谬误</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/20_%E5%90%88%E6%88%90%E8%B0%AC%E8%AF%AF.jpg" alt="合成谬误"></p>
<blockquote>
<p><strong>推断一群人的特性或信条也代表了整个团体。</strong><br>
<em>“最近的恐怖袭击是由激进的伊斯兰教徒组织的。因此所有的恐怖分子都是穆斯林。”</em></p>
</blockquote>
<h3 id="分割谬误"><a href="https://zh.wikipedia.org/wiki/%E5%88%86%E5%89%B2%E8%AC%AC%E8%AA%A4">分割谬误</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/21_%E5%88%86%E5%89%B2%E8%B0%AC%E8%AF%AF.jpg" alt="分割谬误"></p>
<blockquote>
<p><strong>将整个团体的特性或信条自动代入到每一名成员的头上。</strong><br>
<em>“苹果的产品向来颠覆传统，设计一流。下一款也一定如此。”</em></p>
</blockquote>
<h3 id="设计谬误">设计谬误</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/21_%E5%88%86%E5%89%B2%E8%B0%AC%E8%AF%AF.jpg" alt="设计谬误"></p>
<blockquote>
<p><strong>因为某样东西设计精美，视效上佳，所以更加站得住脚。</strong><br>
<em>“呃…”</em></p>
</blockquote>
<h3 id="赌徒谬误"><a href="https://zh.wikipedia.org/wiki/%E8%B3%AD%E5%BE%92%E8%AC%AC%E8%AA%A4">赌徒谬误</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/23_%E8%B5%8C%E5%BE%92%E8%B0%AC%E8%AF%AF.jpg" alt="赌徒谬误"></p>
<blockquote>
<p><strong>认为历史结果会影响未来结果。</strong><br>
<em>“我已连续丢了10次硬币，都是正面朝上。因此下一次更可能丢出反面来。”</em></p>
</blockquote>
<h3 id="轻率概化"><a href="https://zh.wikipedia.org/wiki/%E8%8D%89%E7%8E%87%E6%AD%B8%E7%B4%8D">轻率概化</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/24_%E8%BD%BB%E7%8E%87%E6%A6%82%E5%8C%96.jpg" alt="轻率概化"></p>
<blockquote>
<p><strong>从单一的样本得出概括性的结论。</strong><br>
<em>“我被前面的女驾驶别了下。女人就是不能开车。”</em></p>
</blockquote>
<h3 id="妄下定论">妄下定论</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/25_%E5%A6%84%E4%B8%8B%E5%AE%9A%E8%AE%BA.jpg" alt="妄下定论"></p>
<blockquote>
<p><strong>没有公平考虑所有相关（且易举证的）事实，就妄下结论。</strong><br>
<em>“她想要医疗保险报销避孕药？真是个婊子。”</em></p>
</blockquote>
<h3 id="中间立场">中间立场</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/26_%E4%B8%AD%E9%97%B4%E7%AB%8B%E5%9C%BA.jpg" alt="中间立场"></p>
<blockquote>
<p><strong>相冲突的两个观点似乎都有道理，那么答案一定在两者的中间地带。</strong><br>
<em>“我追尾了你的车，但我不认为自己该出修理费。你认为我该出所有的修理费。合乎情理的方案就是平分费用。”</em></p>
</blockquote>
<h3 id="完美主义谬误"><a href="https://zh.wikipedia.org/wiki/%E6%B6%85%E6%A7%83%E8%AC%AC%E8%AA%A4">完美主义谬误</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/27_%E5%AE%8C%E7%BE%8E%E4%B8%BB%E4%B9%89%E8%B0%AC%E8%AF%AF.jpg" alt="完美主义谬误"></p>
<blockquote>
<p><strong>认为只有完美的成功才是可行的选择，从而反对任何低于预期的方案。</strong><br>
<em>“这反酒驾的宣传究竟有什么用？人们还是会醉酒驾车的。”</em></p>
</blockquote>
<h3 id="相对论谬误">相对论谬误</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/28_%E7%9B%B8%E5%AF%B9%E8%AE%BA%E8%B0%AC%E8%AF%AF.jpg" alt="相对论谬误"></p>
<blockquote>
<p><strong>否定某样客观事实，认为事实是相对一个或一群人而言的。</strong><br>
<em>“那对你来说可能是对的。但对我来说不是。”</em></p>
</blockquote>
<h3 id="以偏概全"><a href="https://zh.wikipedia.org/wiki/%E4%BB%A5%E5%81%8F%E6%A6%82%E5%85%A8">以偏概全</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/29_%E4%BB%A5%E5%81%8F%E6%A6%82%E5%85%A8.jpg" alt="以偏概全"></p>
<blockquote>
<p><strong>认为从小样本观察到的同样适用于整体。</strong><br>
<em>“这家大型制鞋商在血汗工厂里雇用童工。可想而知所有制鞋公司都是邪恶的童工奴隶主！”</em></p>
</blockquote>
<h3 id="一概而论">一概而论</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/30_%E4%B8%80%E6%A6%82%E8%80%8C%E8%AE%BA.jpg" alt="一概而论"></p>
<blockquote>
<p><strong>宽泛地应用一般性原则。</strong><br>
<em>“那些年轻人暴乱是因为他们缺失有道德观念的父亲。”</em></p>
</blockquote>
<h3 id="中词不周延"><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E8%A9%9E%E4%B8%8D%E5%91%A8%E5%BB%B6">中词不周延</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/31_%E4%B8%AD%E8%AF%8D%E4%B8%8D%E5%91%A8%E5%BB%B6.jpg" alt="中词不周延"></p>
<blockquote>
<p><strong>因两件事有一个共通点，那么他们就是同一回事。</strong><br>
<em>“理论是尚未证实的观点。科学家用‘进化论’这一词，可见进化是未被证实的。”</em></p>
</blockquote>
<h2 id="操纵内容">操纵内容</h2>
<h3 id="临阵救援">临阵救援</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/32_%E4%B8%B4%E9%98%B5%E6%95%91%E6%8F%B4.jpg" alt="临阵救援"></p>
<blockquote>
<p><strong>通过不断修改论据，搪塞问题，来保全自己的一贯主张。</strong><br>
<em>“…但除了更好的卫生，医药，教育，灌溉，公共卫生，道路，净水系统和公共秩序…罗马人为我们做了什么？”</em></p>
</blockquote>
<h3 id="一孔之见">一孔之见</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/33_%E4%B8%80%E5%AD%94%E4%B9%8B%E8%A7%81.jpg" alt="一孔之见"></p>
<blockquote>
<p><strong>用不具代表性的样本所得出的结论，来支持自己的论点。</strong><br>
<em>“我们的网上调查表示，90%的互联网用户反对网络隐私法。”</em></p>
</blockquote>
<h3 id="确认偏误"><a href="https://zh.wikipedia.org/wiki/%E7%A2%BA%E8%AA%8D%E5%81%8F%E8%AA%A4">确认偏误</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/34_%E7%A1%AE%E8%AE%A4%E5%81%8F%E8%AF%AF.jpg" alt="确认偏误"></p>
<blockquote>
<p><strong>挑拣对自己有利的证据，而故意无视相冲突的。</strong><br>
<em>“很明显911事件是美国政府为了合理化伊拉克与阿富汗战争而发动的阴谋。没有飞机撞上五角大楼。双子塔的倒塌是控制爆破。。。等等”</em></p>
</blockquote>
<h3 id="伪二分法"><a href="https://zh.wikipedia.org/wiki/%E5%81%87%E5%85%A9%E9%9B%A3%E6%8E%A8%E7%90%86">伪二分法</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/35_%E4%BC%AA%E4%BA%8C%E5%88%86%E6%B3%95.jpg" alt="伪二分法"></p>
<blockquote>
<p><strong>隐藏其它可能性，将两个对立的观点看作仅有的选择。</strong><br>
<em>“我们要么就得削减教育预算，要么就得负更多的债。我们不能负更多的债了，所以我们非降低教育预算不可。”</em></p>
</blockquote>
<h3 id="谎言"><a href="https://zh.wikipedia.org/wiki/%E8%B0%8E%E8%A8%80">谎言</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/36_%E8%B0%8E%E8%A8%80.jpg" alt="谎言"></p>
<blockquote>
<p><strong>彻头彻尾的谎言，被作为真相一再重复。</strong><br>
<em>“我没有和那个女人发生性关系。”</em></p>
</blockquote>
<h3 id="误导性鲜活个案"><a href="https://zh.wikipedia.org/wiki/%E8%BB%BC%E4%BA%8B%E8%AD%89%E6%93%9A#%E8%AA%A4%E5%B0%8E%E6%80%A7%E9%AE%AE%E6%B4%BB%E5%80%8B%E6%A1%88">误导性鲜活个案</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/37_%E8%AF%AF%E5%AF%BC%E6%80%A7%E9%B2%9C%E6%B4%BB%E4%B8%AA%E6%A1%88.jpg" alt="误导性鲜活个案"></p>
<blockquote>
<p><strong>用生动的细节来描述一次小概率事件，以让别人相信这是一个问题。</strong><br>
<em>“在法院判决同性婚姻合法化之后，学校图书馆被要求存有同性文学作品；小学生会读到同性恋的童话故事，甚至有明确支持同性恋的手册。”</em></p>
</blockquote>
<h3 id="转移注意">转移注意</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/38_%E8%BD%AC%E7%A7%BB%E6%B3%A8%E6%84%8F.jpg" alt="转移注意"></p>
<blockquote>
<p><strong>将毫不相关的话题引入辩论，以干扰视线并导向不同的结论。</strong><br>
<em>“参议员不需要为他开销的异常做出说明。毕竟，有些参议员做的破事儿比这严重多了。”</em></p>
</blockquote>
<h3 id="滑坡谬误"><a href="https://zh.wikipedia.org/wiki/%E6%BB%91%E5%9D%A1%E8%AC%AC%E8%AA%A4">滑坡谬误</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/39_%E6%BB%91%E5%9D%A1%E8%B0%AC%E8%AF%AF.jpg" alt="滑坡谬误"></p>
<blockquote>
<p><strong>认为开始的一小步会无可避免地引发一串相关（负面）的事件。</strong><br>
<em>“如果我们将大麻合法化，更多的人就会开始吸食毒品和海洛因。到时候我们就得也合法化那些。”</em></p>
</blockquote>
<h3 id="隐瞒证据">隐瞒证据</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/40_%E9%9A%90%E7%9E%92%E8%AF%81%E6%8D%AE.jpg" alt="隐瞒证据"></p>
<blockquote>
<p><strong>有意不用相关且重要的信息，因为那对立于自己的结论。</strong><br>
<em>“炒菜产生的油烟是PM2.5的重要来源，所以要治理雾霾，中国人就得少做菜。”</em></p>
</blockquote>
<h3 id="无法证伪">无法证伪</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/41_%E6%97%A0%E6%B3%95%E8%AF%81%E4%BC%AA.jpg" alt="无法证伪"></p>
<blockquote>
<p><strong>提出一个无法被证伪的观点，因为无法加以验证。</strong><br>
<em>“他撒谎是因为鬼上身了。”</em></p>
</blockquote>
<h2 id="混淆因果">混淆因果</h2>
<h3 id="肯定后件"><a href="https://zh.wikipedia.org/wiki/%E8%82%AF%E5%AE%9A%E5%BE%8C%E4%BB%B6">肯定后件</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/42_%E8%82%AF%E5%AE%9A%E5%90%8E%E4%BB%B6.jpg" alt="肯定后件"></p>
<blockquote>
<p><strong>认为对你所观察到的现象只有一种解释。</strong><br>
<em>“婚姻会带来孩子的降生。所以这就是其存在的理由。”</em></p>
</blockquote>
<h3 id="循环逻辑">循环逻辑</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/43_%E5%BE%AA%E7%8E%AF%E9%80%BB%E8%BE%91.jpg" alt="循环逻辑"></p>
<blockquote>
<p><strong>论证的前提里已经蕴含结论。</strong><br>
<em>“《圣经》上说上帝存在。由于圣经是上帝的话，圣经必然正确。所以上帝是存在的。”</em></p>
</blockquote>
<h3 id="相关即因果">相关即因果</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/44_%E7%9B%B8%E5%85%B3%E5%8D%B3%E5%9B%A0%E6%9E%9C.jpg" alt="相关即因果"></p>
<blockquote>
<p><strong>认为两个一起发生的事件一定有因果关系。（关联性=因果性）</strong><br>
<em>“小混混们听主题暴力的饶舌音乐。所以饶舌音乐会造成青少年的暴力行为。”</em></p>
</blockquote>
<h3 id="否定前件"><a href="https://zh.wikipedia.org/wiki/%E5%90%A6%E5%AE%9A%E5%89%8D%E4%BB%B6">否定前件</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/45_%E5%90%A6%E5%AE%9A%E5%89%8D%E4%BB%B6.jpg" alt="否定前件"></p>
<blockquote>
<p><strong>有这样的结果并非只有一个解释。因此，在这样的情况下从结果反推原因是不准确的。</strong><br>
<em>“如果你读了好学校，你就会找到好工作。如果你没读好学校，你就找不到好工作。”</em></p>
</blockquote>
<h3 id="忽视主因">忽视主因</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/46_%E5%BF%BD%E7%95%A5%E4%B8%BB%E5%9B%A0.jpg" alt="忽视主因"></p>
<blockquote>
<p><strong>声称是某事件导致了后果，而实际上另一件（意料之外）的事才是原因。</strong><br>
<em>“60年代我们开始了性解放运动，而现在人们正死于艾滋。”</em></p>
</blockquote>
<h3 id="前后即因果">前后即因果</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/44_%E7%9B%B8%E5%85%B3%E5%8D%B3%E5%9B%A0%E6%9E%9C.jpg" alt="前后即因果"></p>
<blockquote>
<p><strong>因为一件事是在另一件事之后发生的，因此也是由那件事引起的。</strong>
<em>“总统上台之后，失业人数创了历史新高。所以总统阻碍了经济发展。”</em></p>
</blockquote>
<h3 id="积非成是"><a href="https://zh.wikipedia.org/wiki/%E7%A9%8D%E9%9D%9E%E6%88%90%E6%98%AF">积非成是</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/48_%E7%A7%AF%E9%9D%9E%E6%88%90%E6%98%AF.jpg" alt="积非成是"></p>
<blockquote>
<p><strong>认为一桩错事能被另一桩错事所抵消。</strong><br>
<em>“不错——这监狱环境恶劣又没人性，不过关的本来就是罪犯！”</em></p>
</blockquote>
<h2 id="发起进攻">发起进攻</h2>
<h3 id="人身攻击"><a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E8%BA%AB%E6%94%BB%E6%93%8A">人身攻击</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/49_%E4%BA%BA%E8%BA%AB%E6%94%BB%E5%87%BB.jpg" alt="人身攻击"></p>
<blockquote>
<p><strong>绕开论证，针对辩论者本身发起不相干的攻击。</strong><br>
<em>“你以为自己是生物学专家吗，也好意思来教我们转基因食品的事？”</em></p>
</blockquote>
<h3 id="举证责任"><a href="https://zh.wikipedia.org/wiki/%E8%88%89%E8%AD%89%E8%B2%AC%E4%BB%BB_(%E5%93%B2%E5%AD%B8)">举证责任</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/50_%E4%B8%BE%E8%AF%81%E8%B4%A3%E4%BB%BB.jpg" alt="举证责任"></p>
<blockquote>
<p><strong>我不需要证明我说的正确——你必须证明它是错的。</strong><br>
<em>“我坚持认为长期的太阳活动周期是全球变暖的原因。证明我错了啊。”</em></p>
</blockquote>
<h3 id="身份主观">身份主观</h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/51_%E8%BA%AB%E4%BB%BD%E4%B8%BB%E8%A7%82.jpg" alt="身份主观"></p>
<blockquote>
<p><strong>认为一个论断不可信，因为支持者与之有利益关系。</strong><br>
<em>“研究手机对健康影响的这个调研有手机公司参与。所以，研究结果不可信。”</em></p>
</blockquote>
<h3 id="基因谬误"><a href="https://zh.wikipedia.org/wiki/%E8%B5%B7%E6%BA%90%E8%AC%AC%E8%AA%A4">基因谬误</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/52_%E5%9F%BA%E5%9B%A0%E8%B0%AC%E8%AF%AF.jpg" alt="基因谬误"></p>
<blockquote>
<p><strong>攻击一个论点的来源，而非它的内容。</strong><br>
<em>“这本书是1967年出版的，里面说的东西哪还有价值。”</em></p>
</blockquote>
<h3 id="罪恶关联"><a href="https://zh.wikipedia.org/wiki/%E9%97%9C%E8%81%AF%E8%AC%AC%E8%AA%A4#%E7%BD%AA%E6%83%A1%E9%97%9C%E8%81%AF">罪恶关联</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/53_%E7%BD%AA%E6%81%B6%E5%85%B3%E8%81%94.jpg" alt="罪恶关联"></p>
<blockquote>
<p><strong>通过将一个论点与形象不良的人或群体联系起来，从而破坏其可信度。</strong><br>
<em>“哦，你想要放松反恐条例，就像那帮恐怖分子想要的一样。所以你是支持恐怖主义的啰？”</em></p>
</blockquote>
<h3 id="稻草人谬误"><a href="https://zh.wikipedia.org/wiki/%E7%A8%BB%E8%8D%89%E4%BA%BA%E8%AB%96%E8%AD%89">稻草人谬误</a></h3>
<p><img src="https://cdn.jsdelivr.net/gh/endureblaze/sophistry@master/54_%E7%A8%BB%E8%8D%89%E4%BA%BA%E8%B0%AC%E8%AF%AF.jpg" alt="稻草人谬误"></p>
<blockquote>
<p><strong>歪曲或简化你对手的论点，以攻击之。</strong>
<em>甲：“国家应该投入更多的预算来发展教育行业。” 乙：“你这么不爱国，居然想减少国防开支，让外国列强有机可乘。”</em></p>
</blockquote>
<h2 id="参考内容">参考内容</h2>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://en.wikipedia.org/wiki/Norm_(philosophy)">Norm (philosophy) - Wikipedia</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/wiki/Category:%E9%9D%9E%E5%BD%A2%E5%BC%8F%E8%AC%AC%E8%AA%A4">分类:非形式谬误 - 维基百科，自由的百科全书</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/wiki/Category:%E8%AC%AC%E8%AA%A4">分类:谬误 - 维基百科，自由的百科全书</a><a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/wiki/%E8%A9%AD%E8%BE%AF">诡辩 - 维基百科，自由的百科全书</a><a href="#fnref:4" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>正经文字</category>
      </categories>
  </entry>
  <entry>
    <title>Flutter 实现图片下划线的 TabBar</title>
    <url>/posts/51bf3ff2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>最近在公司写项目的时候遇到了要把 TabBar 的下划线改成图片样式的，但是官方组件似乎没有提供，在网上也搜不到相关的内容，很是苦恼。后来找到了 <a href="https://medium.com/swlh/flutter-custom-tab-indicator-for-tabbar-d72bbc6c9d0c">Flutter: Custom tab indicator for TabBar</a> 这篇文章，发现他自定义为圆形的方法很简洁，或许可以来<s>抄袭</s>借鉴一下。</p>
<h2 id="创建必须组件">创建必须组件</h2>
<p>首先创建一个 <code>custom_tabbar.dart</code> 来放我们自定义的 TabBar，这样方便复用，里面的代码如下</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTabBar</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> CustomTabBar(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.tabs,</span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.imagePath,</span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.controller,</span><br><span class="line">  &#125;) : <span class="keyword">assert</span>(tabs != <span class="keyword">null</span>),</span><br><span class="line">        <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;Widget&gt; tabs;</span><br><span class="line">  <span class="keyword">final</span> TabController controller;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> imagePath;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _CustomTabBarrState createState() =&gt; _CustomTabBarState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_CustomTabBarState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">CustomTabBar</span>&gt; </span>&#123;</span><br><span class="line">  ui.Image _image;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    loadImage(widget.imagePath).then(</span><br><span class="line">          (value) =&gt; setState(</span><br><span class="line">            () &#123;</span><br><span class="line">          _image = value;</span><br><span class="line">        &#125;,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TabBar(</span><br><span class="line">      tabs: widget.tabs,</span><br><span class="line">      controller: widget.controller,</span><br><span class="line">      indicator: ImageTabIndicator(image: _image),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用 StatefulWidget 是因为获取到图片之后要刷新一下布局，不然里面的下划线都是空的了，<code>loadImage</code> 是一个从 Assets 获取图片转换到 Image 的方法，这是 <code>dart:ui</code> 包下面的，方法代码如下：</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/services.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:ui&#x27;</span> <span class="keyword">as</span> ui;</span><br><span class="line"></span><br><span class="line">Future&lt;ui.Image&gt; loadImage(<span class="built_in">String</span> path) <span class="keyword">async</span> &#123;</span><br><span class="line">  ByteData data = <span class="keyword">await</span> rootBundle.load(path);</span><br><span class="line">  ui.Codec codec = <span class="keyword">await</span> ui.instantiateImageCodec(data.buffer.asUint8List());</span><br><span class="line">  ui.FrameInfo fi = <span class="keyword">await</span> codec.getNextFrame();</span><br><span class="line">  <span class="keyword">return</span> fi.image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意这是一个异步方法</p>
<h2 id="实现图片下划线">实现图片下划线</h2>
<p>刚才在 <code>custom_tabbar.dart</code> 看到了有一个 <code>ImageTabIndicator</code>，这就是要实现下划线的地方了，里面的代码也比较简单</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageTabIndicator</span> <span class="keyword">extends</span> <span class="title">Decoration</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> BoxPainter _painter;</span><br><span class="line"></span><br><span class="line">  ImageTabIndicator(&#123;<span class="built_in">double</span> radius = <span class="number">10</span>, <span class="meta">@required</span> ui.Image image&#125;)</span><br><span class="line">      : _painter = _ImagePainter(radius, image);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  BoxPainter createBoxPainter([onChanged]) =&gt; _painter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_ImagePainter</span> <span class="keyword">extends</span> <span class="title">BoxPainter</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> Paint _paint;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> radius;</span><br><span class="line">  <span class="keyword">final</span> ui.Image image;</span><br><span class="line"></span><br><span class="line">  _ImagePainter(<span class="keyword">this</span>.radius, <span class="keyword">this</span>.image)</span><br><span class="line">      : _paint = Paint()</span><br><span class="line">          ..isAntiAlias = <span class="keyword">true</span></span><br><span class="line">          ..strokeCap = StrokeCap.round;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> paint(Canvas canvas, Offset offset, ImageConfiguration cfg) &#123;</span><br><span class="line">    <span class="keyword">if</span> (image != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">final</span> Offset imageOffset = offset +</span><br><span class="line">          Offset(cfg.size.width / <span class="number">2</span>, cfg.size.height / <span class="number">2</span> + image.height + <span class="number">2</span>);</span><br><span class="line">      paintImage(</span><br><span class="line">          canvas: canvas,</span><br><span class="line">          rect: Rect.fromCircle(center: imageOffset, radius: radius),</span><br><span class="line">          image: image,</span><br><span class="line">          fit: BoxFit.fitWidth);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里没什么好说的，就是去画传进来的图片，不过这里的位置需要去自己调整。另外不能用 <code>Paint</code> 画，一定要用 <a href="https://api.flutter.dev/flutter/painting/paintImage.html"><code>paintImage</code></a> 来画,他有一个转换方法，使用 <code>Paint</code> 会变成背景。</p>
<p>17 行这个 <code>Paint</code> 的初始化说实话应该不存在了，但是我试着删除他之后绘制就没了，很奇怪我就留着了。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>如何优雅的使用 Material Design 2</title>
    <url>/posts/9cb48aa5/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="简介">简介</h3>
<p>Material Design 2 （下面简称 MD2）已经发布了一段时间了，可是还有一些小伙伴不知道怎么迁移到 MD2 来，我也是查了不少资料才摸索出来的</p>
<h3 id="AndroidX">AndroidX</h3>
<p>首先，需要迁移到 AndroidX 来，这个网上有很多教程了，AndroidStudio 和 IDEA 也有相关的功能，这里就不赘述了</p>
<h3 id="修改主题">修改主题</h3>
<p>然后，需要修改 <code>styles.xml</code> 中的内容了，修改你之前的主题为</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;style name=<span class="string">&quot;AppTheme&quot;</span> parent=<span class="string">&quot;Theme.MaterialComponents.Light.NoActionBar&quot;</span>&gt;<span class="string">&quot;</span></span><br></pre></td></tr></table></figure>
<p>当然还有其他可选的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Theme.MaterialComponents</span><br><span class="line">Theme.MaterialComponents.Light</span><br><span class="line">Theme.MaterialComponents.NoActionBar</span><br><span class="line">Theme.MaterialComponents.Light.NoActionBar</span><br><span class="line">Theme.MaterialComponents.Light.DarkActionBar</span><br></pre></td></tr></table></figure>
<p>如果只想对 Material 组件生效那就用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Theme.MaterialComponents.Bridge</span><br><span class="line">Theme.MaterialComponents.Light.Bridge</span><br><span class="line">Theme.MaterialComponents.NoActionBar.Bridge</span><br><span class="line">Theme.MaterialComponents.Light.NoActionBar.Bridge</span><br><span class="line">Theme.MaterialComponents.Light.DarkActionBar.Bridge</span><br></pre></td></tr></table></figure>
<p>仅仅是这一个操作就完成了大部分任务了，现在编译就可以看到一些新特性了
不过肯定没有这么简单，所以这里来讲解一些坑</p>
<h3 id="开始踩坑">开始踩坑</h3>
<h4 id="FloatingActionButton-颜色问题">FloatingActionButton 颜色问题</h4>
<p>对，你没看错，MD2 默认的 FAB 颜色有一点问题<br>
默认情况下背景色不是主题的强调色，图标的颜色也是黑的，很丑，那么怎么解决呢？
很简单，添加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">app:backgroundTint=<span class="string">&quot;?attr/colorAccent&quot;</span></span><br><span class="line">app:tint=<span class="string">&quot;@android:color/white&quot;</span></span><br></pre></td></tr></table></figure>
<p>这两行到 FAB 的属性，即</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;com.google.android.material.floatingactionbutton.FloatingActionButton</span><br><span class="line">    android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:id=<span class="string">&quot;@+id/fab_chat_edit&quot;</span></span><br><span class="line">        app:backgroundTint=<span class="string">&quot;?attr/colorAccent&quot;</span></span><br><span class="line">        app:tint=<span class="string">&quot;@android:color/white&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>
<p>这样就完成啦，背景色是主题的强调色，图标是白色，就和以前的一样了，当然也可以修改为其他的颜色</p>
<h4 id="布局的-Design-界面不能预览">布局的 Design 界面不能预览</h4>
<p>这个就比较麻烦了，好像只有第一次启动 IDE 的时候能正常看到布局，过一会就无法预览了，提示异常，感觉是个 Bug，临时的解决办法就是修改主题，xml布局界面上边修改主题为旧版本的即可，这样改以后布局可以看，只是 material 的效果都没了，很难受</p>
<p>还有一种办法，参考 <a href="https://stackoverflow.com/questions/55791884/cannot-render-materialbutton-with-android-material1-1-x">StackOverflow</a> 比较简单的办法,添加一个预览的style</p>
<p>最后还有一种说是 Android Studio 3.5 修复了，不过我是 IDEA 就不太清楚了</p>
<h3 id="待续">待续</h3>
<p>暂时遇到这些，后面还有的话也记录上来</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>踩坑</tag>
        <tag>Android</tag>
        <tag>Material Design 2</tag>
      </tags>
  </entry>
  <entry>
    <title>实现滑动隐藏 ToolBar 与 BottomNavigation</title>
    <url>/posts/919199f6/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>最近在重写 Kirby Assistant 的时候需要实现像图中的效果，那这样的效果具体应该怎么实现呢，快点进来看看吧。(图在里面)</p>
<p>(这里有图，GitHub 可能速度比较慢)
<img src="../../media/article_img/slide2hide_toolbar&amp;bottomNavigation/%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C.gif" alt="最终效果"></p>
<h2 id="准备过程">准备过程</h2>
<p>首先这样的效果都是基 <code>CoordinatorLayout</code> 来实现的，所以先在 <code>app</code> 模块下添加如下依赖</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;androidx.coordinatorlayout:coordinatorlayout:1.1.0-beta01&#x27;</span><span class="comment">//版本可能不是最新，根据自身情况选择新版</span></span><br></pre></td></tr></table></figure>
<p>然后将需要实现这个效果界面的布局最顶层的布局替换为<code>CoordinatorLayout</code>即</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--可能会有其他的组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>到此，准备过程就完成了</p>
<h2 id="实现隐藏-Toolbar">实现隐藏 Toolbar</h2>
<p>首先在上面的基础上需要添加 Toolbar 组件，如</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.appbar.AppBarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/mainAppBarLayout&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:theme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:elevation</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:popupTheme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Light&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_scrollFlags</span>=<span class="string">&quot;scroll|enterAlways|snap&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--上面这行重点--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">androidx.appcompat.widget.Toolbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.google.android.material.appbar.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--可能会有其他的组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>那么这里需要说明一下 <code>app:layout_scrollFlags=&quot;scroll|enterAlways|snap&quot;</code> 是什么意思，这个实际上是用来控制 AppBarLayout 内部组件的行为。</p>
<p>其中,<code>scroll</code> 表示当界面向上滚动的时候, Toolbar会
跟着一起向上滚动并实现隐藏。</p>
<p><code>enterAlways</code> 表示当界面向下滚动的时候, Toolbar会跟着一起向下滚动并重新显示。</p>
<p><code>snap</code> 表示当 Toolbar还没有完全隐藏或显示的时候,会根据当前滚动的距离,自动选择是隐藏还是显示。</p>
<p>当然还有其他参数，但是比较少用</p>
<p>接着添加另外一个组件，例如 RecyclerView</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--AppBarLayout相关组件--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/main_rlv&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_behavior</span>=<span class="string">&quot;@string/appbar_scrolling_view_behavior&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--重点--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--可能会有其他的组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到这里指定了一个 <code>app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;</code> 那么这个属性实际上是谷歌封装好的一个 Behavior，已经完成了 Toolbar 隐藏所有动画效果。</p>
<h2 id="实现隐藏-BottomNavigation">实现隐藏 BottomNavigation</h2>
<p>BottomNavigation 的话，谷歌没有进行封装，需要我们自己实现，那么先在布局添加 BottomNavigation 组件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--AppBarLayout相关组件--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--RecyclerView组件--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.bottomnavigation.BottomNavigationView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/main_bottom_navigation_bar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;bottom&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;?android:attr/windowBackground&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:elevation</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_behavior</span>=<span class="string">&quot;cn.endureblaze.kirby.main.BottomNavigationBehavior&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:menu</span>=<span class="string">&quot;@menu/main_bottom_navigation_menu&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:labelVisibilityMode</span>=<span class="string">&quot;labeled&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>那么可以看到这里指定了一个 <code>app:layout_behavior=&quot;cn.endureblaze.kirby.main.BottomNavigationBehavior&quot;</code>
这实际上是指定了一个自定义 behavior，数值需要填上绝对路径</p>
<p>那么来看看 BottomNavigationBehavior 是怎么写的吧</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BottomNavigationBehavior</span>&lt;V <span class="keyword">extends</span> <span class="title class_">View</span>&gt;  <span class="keyword">extends</span> <span class="title class_">CoordinatorLayout</span>.Behavior&lt;V&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> lastStartedType;</span><br><span class="line">    <span class="keyword">private</span> ValueAnimator offsetAnimator;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">isSnappingEnabled</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BottomNavigationBehavior</span> <span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BottomNavigationBehavior</span> <span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSnappingEnabled</span><span class="params">(<span class="type">boolean</span> isEnabled)</span> &#123;</span><br><span class="line">        isSnappingEnabled = isEnabled;</span><br><span class="line">        lastStartedType = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (offsetAnimator != <span class="literal">null</span>) &#123;</span><br><span class="line">            offsetAnimator.cancel();</span><br><span class="line">            offsetAnimator = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">expand</span><span class="params">(CoordinatorLayout coordinatorLayout, V child)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] consumed = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">curIsSnappingEnabled</span> <span class="operator">=</span> isSnappingEnabled;</span><br><span class="line">        <span class="keyword">if</span>(curIsSnappingEnabled) &#123;</span><br><span class="line">            setSnappingEnabled(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        onNestedPreScroll(coordinatorLayout, child, <span class="literal">null</span>, <span class="number">0</span>, -<span class="number">1000</span>, consumed, ViewCompat.TYPE_TOUCH);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(curIsSnappingEnabled) &#123;</span><br><span class="line">            setSnappingEnabled(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onStartNestedScroll</span><span class="params">(<span class="meta">@NonNull</span> CoordinatorLayout coordinatorLayout, <span class="meta">@NonNull</span> V child, <span class="meta">@NonNull</span> View directTargetChild,</span></span><br><span class="line"><span class="params">                                       <span class="meta">@NonNull</span> View target, <span class="type">int</span> axes, <span class="type">int</span> type)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (axes != ViewCompat.SCROLL_AXIS_VERTICAL)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        lastStartedType = type;</span><br><span class="line">        <span class="keyword">if</span>(offsetAnimator!= <span class="literal">null</span>) &#123;</span><br><span class="line">            offsetAnimator.cancel();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onStopNestedScroll</span><span class="params">(<span class="meta">@NonNull</span> CoordinatorLayout coordinatorLayout, <span class="meta">@NonNull</span> V child, <span class="meta">@NonNull</span> View target, <span class="type">int</span> type)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isSnappingEnabled)</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加一个 snap behaviour</span></span><br><span class="line">        <span class="comment">// 这里的逻辑借用了 AppBarLayout onStopNestedScroll 相关代码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lastStartedType == ViewCompat.TYPE_TOUCH || type == ViewCompat.TYPE_NON_TOUCH) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// find nearest seam</span></span><br><span class="line">            <span class="type">float</span> <span class="variable">currTranslation</span> <span class="operator">=</span> child.getTranslationY();</span><br><span class="line">            <span class="type">float</span> <span class="variable">childHalfHeight</span> <span class="operator">=</span> child.getHeight() * <span class="number">0.5f</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (currTranslation &gt;= childHalfHeight) &#123;</span><br><span class="line">                animateBarVisibility(child, <span class="literal">false</span>); <span class="comment">// 向下</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                animateBarVisibility(child, <span class="literal">true</span>); <span class="comment">//向上</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNestedPreScroll</span> <span class="params">(<span class="meta">@NonNull</span> CoordinatorLayout coordinatorLayout,</span></span><br><span class="line"><span class="params">                                   <span class="meta">@NonNull</span> V child,</span></span><br><span class="line"><span class="params">                                   View target,</span></span><br><span class="line"><span class="params">                                   <span class="type">int</span> dx,</span></span><br><span class="line"><span class="params">                                   <span class="type">int</span> dy,</span></span><br><span class="line"><span class="params">                                   <span class="meta">@NonNull</span> <span class="type">int</span>[] consumed,</span></span><br><span class="line"><span class="params">                                   <span class="type">int</span> type)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>.onNestedPreScroll(coordinatorLayout, child, target, dx, dy, consumed, type);</span><br><span class="line">        child.setTranslationY(Math.max(<span class="number">0f</span>, Math.min(child.getHeight(), child.getTranslationY() + dy)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">layoutDependsOn</span><span class="params">(<span class="meta">@NonNull</span> CoordinatorLayout parent, <span class="meta">@NonNull</span> V child, <span class="meta">@NonNull</span> View dependency)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(dependency <span class="keyword">instanceof</span> Snackbar.SnackbarLayout) &#123;</span><br><span class="line">            updateSnackBar(child, (Snackbar.SnackbarLayout)dependency);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.layoutDependsOn(parent, child, dependency);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateSnackBar</span><span class="params">(View child, Snackbar.SnackbarLayout snackBarLayout)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(snackBarLayout.getLayoutParams() <span class="keyword">instanceof</span> CoordinatorLayout.LayoutParams) &#123;</span><br><span class="line">            CoordinatorLayout.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> (CoordinatorLayout.LayoutParams)snackBarLayout.getLayoutParams();</span><br><span class="line"></span><br><span class="line">            params.setAnchorId(child.getId());</span><br><span class="line">            params.anchorGravity = Gravity.TOP;</span><br><span class="line">            params.gravity = Gravity.TOP;</span><br><span class="line">            snackBarLayout.setLayoutParams(params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">animateBarVisibility</span><span class="params">(<span class="keyword">final</span> View child, <span class="type">boolean</span> isVisible)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (offsetAnimator == <span class="literal">null</span>) &#123;</span><br><span class="line">            offsetAnimator = <span class="keyword">new</span> <span class="title class_">ValueAnimator</span>();</span><br><span class="line">            offsetAnimator.setInterpolator(<span class="keyword">new</span> <span class="title class_">DecelerateInterpolator</span>());</span><br><span class="line">            offsetAnimator.setDuration(<span class="number">150L</span>);</span><br><span class="line">            offsetAnimator.addUpdateListener(animation -&gt; child.setTranslationY((<span class="type">float</span>)animation.getAnimatedValue()));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            offsetAnimator.cancel();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">float</span> <span class="variable">targetTranslation</span> <span class="operator">=</span> isVisible ? <span class="number">0f</span> : child.getHeight();</span><br><span class="line">        offsetAnimator.setFloatValues(child.getTranslationY(), targetTranslation);</span><br><span class="line">        offsetAnimator.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么这个 behavior 不仅实现了 BottomNavigation 的西东隐藏，而且添加了 snap 效果，并且整合了 snackbar 与 BottomNavigation 之间的关系，这样就不会重叠了</p>
<p>snap 效果可以通过<code>private boolean isSnappingEnabled = true//false是关闭;</code>来控制</p>
<h2 id="FloatingActionButton-呢">FloatingActionButton 呢</h2>
<p>上面的这些都是忽略了 FAB 的情况下，那么 FAB 应该如何实现呢？当然也是靠自定义 behavior 不过稍稍有点不同，一起来看看吧</p>
<p>首先添加布局</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--AppBarLayout相关组件--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--RecyclerView组件--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--BottomNavigationView组件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">com.google.android.material.floatingactionbutton.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/fab_main&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;top&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_anchor</span>=<span class="string">&quot;@id/main_bottom_navigation_bar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_anchorGravity</span>=<span class="string">&quot;top|end&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:useCompatPadding</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_behavior</span>=<span class="string">&quot;cn.endureblaze.kirby.main.BottomNavigationFABBehavior&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:fabSize</span>=<span class="string">&quot;normal&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_scrollFlags</span>=<span class="string">&quot;scroll|enterAlways&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.coordinatorlayout.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里有几个属性需要注意一下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">app:layout_anchor=&quot;@id/main_bottom_navigation_bar&quot;</span><br><span class="line">app:layout_anchorGravity=&quot;top|end&quot;</span><br><span class="line">app:layout_behavior=&quot;cn.endureblaze.kirby.main.BottomNavigationFABBehavior&quot;</span><br></pre></td></tr></table></figure>
<p><code>layout_anchor</code> 是用来指定一个 FAB 的锚点，即以哪个控件为参照点设置位置<br>
<code>layout_anchorGravity</code> 设置 FAB 相对锚点的位置，值有 bottom、center、right、left、top等
<code>layout_behavior</code> 依然是设置自定义 behavior，不再赘述</p>
<p>现在看看 BottomNavigationFABBehavior 有什么内容吧</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BottomNavigationFABBehavior</span>&lt;V <span class="keyword">extends</span> <span class="title class_">View</span>&gt;  <span class="keyword">extends</span> <span class="title class_">CoordinatorLayout</span>.Behavior&lt;V&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BottomNavigationFABBehavior</span> <span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BottomNavigationFABBehavior</span> <span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDependentViewRemoved</span><span class="params">(<span class="meta">@NonNull</span> CoordinatorLayout parent, <span class="meta">@NonNull</span> V child, <span class="meta">@NonNull</span> View dependency)</span> &#123;</span><br><span class="line">        child.setTranslationY(<span class="number">0f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onDependentViewChanged</span><span class="params">(<span class="meta">@NonNull</span> CoordinatorLayout parent, <span class="meta">@NonNull</span> V child, <span class="meta">@NonNull</span> View dependency)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> updateButton(child, dependency);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">layoutDependsOn</span><span class="params">(<span class="meta">@NonNull</span> CoordinatorLayout parent, <span class="meta">@NonNull</span> V child, <span class="meta">@NonNull</span> View dependency)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dependency <span class="keyword">instanceof</span> Snackbar.SnackbarLayout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateSnackBar</span><span class="params">(View child, Snackbar.SnackbarLayout snackBarLayout)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(snackBarLayout.getLayoutParams() <span class="keyword">instanceof</span> CoordinatorLayout.LayoutParams) &#123;</span><br><span class="line">            CoordinatorLayout.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> (CoordinatorLayout.LayoutParams)snackBarLayout.getLayoutParams();</span><br><span class="line"></span><br><span class="line">            params.setAnchorId(child.getId());</span><br><span class="line">            params.anchorGravity = Gravity.TOP;</span><br><span class="line">            params.gravity = Gravity.TOP;</span><br><span class="line">            snackBarLayout.setLayoutParams(params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">updateButton</span><span class="params">(View child,View dependency)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(dependency <span class="keyword">instanceof</span> Snackbar.SnackbarLayout)&#123;</span><br><span class="line">            <span class="type">float</span> <span class="variable">oldTranslation</span> <span class="operator">=</span> child.getTranslationY();</span><br><span class="line">            <span class="type">float</span> <span class="variable">height</span> <span class="operator">=</span> dependency.getHeight();</span><br><span class="line">            <span class="type">float</span> <span class="variable">newTranslation</span> <span class="operator">=</span> dependency.getTranslationY() - height;</span><br><span class="line">            child.setTranslationY(newTranslation);</span><br><span class="line">            <span class="keyword">return</span> oldTranslation != newTranslation;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到还是比较简单的，主要是实现了与底栏的交互还有 snackbar 的交互</p>
<h2 id="结尾">结尾</h2>
<p>那这个实现是我参考了其他的博文以及 GitHub 的一些项目总结出来的，如果那里有问题还请指</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>踩坑</tag>
        <tag>Android</tag>
        <tag>Material Design 2</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Kotlin 编写一个懒加载与 ViewBinding 的 Fragment</title>
    <url>/posts/51f7c2cb/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>有关 ViewBinding 的用法看 <a href="https://developer.android.google.cn/topic/libraries/view-binding">这里</a></p>
<p>最近在学习 Kotlin 的时候有遇到需要封装一个拥有懒加载功能的 Fragment，并且我还想用上新的 ViewBinding 功能。
那么第一个实现比较简单的，之前在 Java 也封装过，唯一的问题就是之前使用的是重写 <code>setUserVisibleHint</code> 方法来实现的，不过这个方法已经被标记为 <code>deprecated</code>（弃用的）了，指不定那一天就用不了了。
根据官方的提示：</p>
<blockquote>
<p>Deprecated
Use FragmentTransaction.setMaxLifecycle(Fragment, Lifecycle.State) instead.</p>
</blockquote>
<p>我们现在应该去调用 <code>setMaxLifecycle</code> 方法来实现这个功能，使用 <code>setMaxLifecycle</code> 来限制了 Fragment 的生命周期，Fragment 的 <code>onReseume()</code> 只有当 Fragment 显示在屏幕上时才会执行，这样就可以把加载数据的方法放在 <code>onResume()</code> 方法中来实现懒加载了。
在 <code>FragmentPagerAdapter</code> 适配器构造方法中有一个 <code>behavior</code> 参数，我们只需要传入一个参数就可以限制他的生命周期了。</p>
<p>那么剩下的就是 <code>ViewBinding</code> 了，这个只需要在继承的时候传入参数就好了，那就开始动手</p>
<h2 id="BaseFragment-部分">BaseFragment 部分</h2>
<p>首先贴上代码</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装一个有懒加载的 Fragment</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> T 传入泛型的 ViewBinding</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> layoutId 传入布局用来跳过在子类中初始化传入 inflater</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseFragment</span>&lt;<span class="type">T : ViewBinding</span>&gt;(<span class="keyword">private</span> <span class="keyword">val</span> layoutId: <span class="built_in">Int</span>) : Fragment(layoutId) &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> isViewOK = <span class="literal">false</span> <span class="comment">//是否完成 View 初始化</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> isFirst = <span class="literal">true</span> <span class="comment">//是否为第一次加载</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> _binding: T? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> binding <span class="keyword">get</span>() = _binding!!</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater: <span class="type">LayoutInflater</span>, container: <span class="type">ViewGroup</span>?, savedInstanceState: <span class="type">Bundle</span>?)</span></span>: View? &#123;</span><br><span class="line">        <span class="keyword">val</span> view = inflater.inflate(layoutId, container, <span class="literal">false</span>)</span><br><span class="line">        <span class="comment">// 完成 initView 后改变view的初始化状态为完成</span></span><br><span class="line">        isViewOK = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">return</span> view</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onViewCreated</span><span class="params">(view: <span class="type">View</span>, savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onViewCreated(view, savedInstanceState)</span><br><span class="line">        _binding = initBinding(view)</span><br><span class="line">        initView()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入对应的 ViewBinding</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">fun</span> <span class="title">initBinding</span><span class="params">(view: <span class="type">View</span>)</span></span>: T</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * fragment 初始化 view 的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">fun</span> <span class="title">initView</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResume</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume()</span><br><span class="line">        <span class="comment">//在 onResume 进行数据懒加载</span></span><br><span class="line">        initLoadData()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initLoadData</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isViewOK &amp;&amp; isFirst) &#123;</span><br><span class="line">            <span class="comment">//加载数据时判断是否完成view的初始化，以及是不是第一次加载此数据</span></span><br><span class="line">            loadDate()</span><br><span class="line">            <span class="comment">//加载第一次数据后改变状态，后续不再重复加载</span></span><br><span class="line">            isFirst = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * fragment 实现懒加载的方法，即在这里加载数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">fun</span> <span class="title">loadDate</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放数据</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroyView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        _binding = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">super</span>.onDestroyView()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>没什么好说的，主要的东西我都写在注释里了，只有两点要注意下：</p>
<ul>
<li>class 必须声明为 abstract 这样才能让子类去实现懒加载的方法</li>
<li>注意 <code>_binding</code> 和 <code>binding</code>，这两个一个对外一个对内，对内的注意在 onDestroyView 进行释放，以免内存泄漏</li>
</ul>
<h2 id="子类-TestFragment">子类 TestFragment</h2>
<p>那我们看看这个应该如何使用吧
（假设你的 Fragment 的布局名称是 fragment_test，里面有一个 id 为 tvMain 的 TextView）</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestFragment</span> : <span class="type">BaseFragment</span>&lt;<span class="type">FragmentTestBinding</span>&gt;(R.layout.fragment_test) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">initBinding</span><span class="params">(view: <span class="type">View</span>)</span></span>: FragmentTestBinding &#123;</span><br><span class="line">        <span class="keyword">return</span> FragmentTestBinding.bind(view)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">initView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 这里是初始化 View 的方法</span></span><br><span class="line">        binding.tvMain.text = <span class="string">&quot;HI&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">loadDate</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 这里的初始化了数据的方法</span></span><br><span class="line">        Toast.makeText(activity,<span class="string">&quot;我初始化了数据&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>跟简单吧，做到了 View 与数据的分离</p>
<h2 id="ViewAdapter-的处理">ViewAdapter 的处理</h2>
<p>那说了这么多，「那个参数」 到底在哪里呢？来了来了，不过我们要先写一个 adapter 才可以</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">constructor</span> (</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> fragmentManager: FragmentManager,</span><br><span class="line">    <span class="comment">// 注意看这个参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> behavior: <span class="built_in">Int</span>,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> fragmentList: List&lt;BaseFragment&lt;*&gt;&gt;</span><br><span class="line">) :</span><br><span class="line">    FragmentPagerAdapter(fragmentManager, behavior) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItem</span><span class="params">(position: <span class="type">Int</span>)</span></span>: Fragment = fragmentList[position]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getCount</span><span class="params">()</span></span>: <span class="built_in">Int</span> = fragmentList.size</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>代码很简单，只是重写了几个方法而已，不过接下来才是重点,在调用传入的时候我们需要转入重要的参数</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">viewPager.adapter = ViewPagerAdapter(</span><br><span class="line">            supportFragmentManager,</span><br><span class="line">            <span class="comment">// 看这里</span></span><br><span class="line">            FragmentPagerAdapter.BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT,</span><br><span class="line">            fragmentList</span><br><span class="line">        )</span><br><span class="line"><span class="comment">// 设置预加载的数量，来测试懒加载是否成功</span></span><br><span class="line">viewPager.offscreenPageLimit = <span class="number">4</span></span><br></pre></td></tr></table></figure>
<p>注意看我们传入了 <code>FragmentPagerAdapter.BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT</code>，这个参数就是作为限制 Fragment 生命周期而存在的。</p>
<p>这样就简单的实现了需要的功能了。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>踩坑</tag>
        <tag>Android</tag>
        <tag>ViewPager</tag>
        <tag>Fragment</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>updateConfiguration 弃用之后更换语言应该何去何从</title>
    <url>/posts/9e078f24/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="note info flat"><p>注意本文使用的语言的是 Kotlin，如需 Java 请自行转换或在网络自行搜索，本文的 minSDK 为 21</p>
</div>
<h2 id="弃用">弃用</h2>
<p>通常提起 Android 程序更换语言可能会想到 <code>Context</code> 的 <code>getResources().updateConfiguration(configuration, displayMetrics)</code>,传入设置好 <code>Locale</code> 的 <code>configuration</code> 以及 <code>Context</code> 的 <code>getResources().getDisplayMetrics()</code>。</p>
<p>然而这个方法在现在已经被标记为 deprecated，这意味着以后的版本可能用不了这个了。</p>
<blockquote>
<p>这是官方的信息：
‘updateConfiguration(android.content.res.Configuration, android.util.DisplayMetrics)’ is deprecated
Deprecated
See android.content.Context.createConfigurationContext(Configuration).</p>
</blockquote>
<p>那简单了，我们只需要看看 <code>Context.createConfigurationContext(Configuration)</code> 怎么使用就可以了，分析一下，这个方法是返回一个 <code>Context</code>，那我们只需要重写一下 <code>ContextWrapper</code> 就好了,这样获取到的就是用一个 <code>Context</code>，保证更换语言成功。</p>
<h2 id="重写-ContextWrapper">重写 ContextWrapper</h2>
<p>这是我写好的 <code>ContextWrapper</code>，比较简单，需要说明的东西我都写在注释了：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">ContextWrapper</span>(base: Context?) : ContextWrapper(base) &#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="comment">//这里使用注解保证编译通过</span></span><br><span class="line">        <span class="meta">@RequiresApi(Build.VERSION_CODES.N)</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">wrap</span><span class="params">(context: <span class="type">Context</span>, newLocale: <span class="type">Locale</span>?)</span></span>: ContextWrapper &#123;</span><br><span class="line">            <span class="keyword">var</span> mContext = context</span><br><span class="line">            <span class="keyword">val</span> res: Resources = mContext.resources</span><br><span class="line">            <span class="keyword">val</span> configuration: Configuration = res.configuration</span><br><span class="line">            <span class="comment">//注意 Android 7.0 前后的不同处理方法</span></span><br><span class="line">            mContext = <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">                configuration.setLocale(newLocale)</span><br><span class="line">                <span class="keyword">val</span> localeList = LocaleList(newLocale)</span><br><span class="line">                LocaleList.setDefault(localeList)</span><br><span class="line">                configuration.setLocales(localeList)</span><br><span class="line">                mContext.createConfigurationContext(configuration)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                configuration.setLocale(newLocale)</span><br><span class="line">                mContext.createConfigurationContext(configuration)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ContextWrapper(mContext)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="准备好切换工具">准备好切换工具</h2>
<p>我这里准备了一个语言的工具类可以参考一下：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">object</span> LanguageUtil &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置语言的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lan 需要设置的语言</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">setLanguage</span><span class="params">(context: <span class="type">Context</span>, lan: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">        context.getSharedPreferences(<span class="string">&quot;settings&quot;</span>, <span class="number">0</span>).edit &#123;</span><br><span class="line">            putString(<span class="string">&quot;language&quot;</span>, lan)</span><br><span class="line">            <span class="keyword">this</span>.commit()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取应用于选择语言对话框的 checkedItem</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getCheckedItem</span><span class="params">(context: <span class="type">Context</span>)</span></span>: <span class="built_in">Int</span> =</span><br><span class="line">        <span class="keyword">when</span> (context.getSharedPreferences(<span class="string">&quot;settings&quot;</span>, <span class="number">0</span>).getString(<span class="string">&quot;language&quot;</span>, <span class="string">&quot;cn&quot;</span>)) &#123;</span><br><span class="line">            <span class="string">&quot;auto&quot;</span> -&gt; <span class="number">0</span></span><br><span class="line">            <span class="string">&quot;zh-rCN&quot;</span> -&gt; <span class="number">1</span></span><br><span class="line">            <span class="string">&quot;zh-rTW&quot;</span> -&gt; <span class="number">2</span></span><br><span class="line">            <span class="string">&quot;en&quot;</span> -&gt; <span class="number">3</span></span><br><span class="line">            <span class="keyword">else</span> -&gt; <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前设置的 Locale</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getLocale</span><span class="params">(context: <span class="type">Context</span>)</span></span>: Locale =</span><br><span class="line">        <span class="keyword">when</span> (context.getSharedPreferences(<span class="string">&quot;settings&quot;</span>, <span class="number">0</span>).getString(<span class="string">&quot;language&quot;</span>, <span class="string">&quot;cn&quot;</span>)) &#123;</span><br><span class="line">            <span class="string">&quot;auto&quot;</span> -&gt; getSysLocale()</span><br><span class="line">            <span class="string">&quot;zh-rCN&quot;</span> -&gt; Locale(<span class="string">&quot;zh&quot;</span>, <span class="string">&quot;CN&quot;</span>)</span><br><span class="line">            <span class="string">&quot;zh-rTW&quot;</span> -&gt; Locale(<span class="string">&quot;zh&quot;</span>, <span class="string">&quot;TW&quot;</span>)</span><br><span class="line">            <span class="string">&quot;en&quot;</span> -&gt; Locale(<span class="string">&quot;en&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span> -&gt; getSysLocale()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前系统的 Locale</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getSysLocale</span><span class="params">()</span></span>: Locale = <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">        LocaleList.getDefault()[<span class="number">0</span>]</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Locale.getDefault()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里使用了 <code>object</code> 关键字让他变成一个单例类，而且我选择的是把设置的语言信息通过 <code>SharedPreferences</code> 进行存储，这里根据你的实际情况来调整就 OK。</p>
<h2 id="使用">使用</h2>
<p>在<strong>每一个</strong> <code>Activity</code> 或者你封装好的 <code>BaseActivity</code> 里重写这样的方法即可：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequiresApi(Build.VERSION_CODES.N)</span></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">attachBaseContext</span><span class="params">(newBase: <span class="type">Context</span>?)</span></span> &#123;</span><br><span class="line">    <span class="comment">//如果不使用工具类也可以在这里处理好 Locale 传入</span></span><br><span class="line">    <span class="keyword">val</span> context = newBase?.let &#123;</span><br><span class="line">        ContextWrapper.wrap(newBase,LanguageUtil.getLocale(newBase))</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(context)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样就可以正常的切换语言了</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>踩坑</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
        <tag>弃用</tag>
      </tags>
  </entry>
  <entry>
    <title>一些 WordPress 主题</title>
    <url>/posts/dc790cfc/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一些 WordPress 主题，好像都是来自吾爱破解，在这里记录一下</p>
<h2 id="betheme">betheme</h2>
<p><a href="https://www.52pojie.cn/thread-590043-1-1.html">https://www.52pojie.cn/thread-590043-1-1.html</a></p>
<h2 id="Begin知更鸟">Begin知更鸟</h2>
<p><a href="https://www.52pojie.cn/thread-664527-1-1.html">https://www.52pojie.cn/thread-664527-1-1.html</a></p>
<h2 id="DUX">DUX</h2>
<p><a href="https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=832427">https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=832427</a></p>
<h2 id="XIU">XIU</h2>
<p><a href="https://www.52pojie.cn/thread-705661-1-1.html">https://www.52pojie.cn/thread-705661-1-1.html</a></p>
]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 软件推荐</title>
    <url>/posts/cd1c3d2a/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这些软件都是我自己用过的，可以通过左边页面快速定位</p>
<h2 id="Visual-Studio-Code">Visual Studio Code</h2>
<p>这个简直首推，编辑利器，人生苦短，我用 VS Code 完成关于文本编辑工作的一切。它天生支持几乎所有编程语言，还可以通过扩展个性化相应的语法高亮等。
如果你想忙里偷闲，VS Code 强大的扩展能力还能让你用它刷 LeetCode 或 V2EX，可谓带薪划水必备。
<img src="../../media/article_img/windows_app_recommend/1.png" alt="enter description here">
你可以在<a href="https://code.visualstudio.com/">官网</a>免费获取 Visual Studio Code。</p>
<h2 id="福昕-PDF-阅读器">福昕 PDF 阅读器</h2>
<p>国产，中文界面，流畅好用，界面美观
<a href="https://www.foxitsoftware.cn/">点这里</a></p>
<h2 id="福昕-PDF-编辑器">福昕 PDF 编辑器</h2>
<p>福昕（Foxit）可能是我国最受欢迎的 PDF 阅读器，由其出品的 <a href="https://www.foxitsoftware.cn/pdf-editor/">PDF 编辑器</a> 也是 Adobe Acrobat 的有力竞争对手。它提供了各种 PDF 批注工具；支持编辑 PDF 中的文本、段落、图片；设计并填写表单；OCR 识别图片中的文字；管理 PDF 页面；转换为其它文件格式等，界面也比较友好。</p>
<h2 id="火绒安全软件">火绒安全软件</h2>
<p>如果你觉得 Windows Defender 还是有些简陋，火绒安全软件是个不错的选择。它提供了病毒联网查杀、垃圾清理、下载保护、浏览器保护等国产卫士标配功能，但不会拖家带口向你问好，还你一片清净。
<img src="../../media/article_img/windows_app_recommend/2.png" alt="enter description here">
除了系统防护外，火绒安全软件还提供了数种实用工具，如弹窗拦截、右键菜单管理、启动项管理、文件粉碎机等。如果你是进阶用户，还可以试试火绒剑这一强大的专业安全分析工具。
<img src="../../media/article_img/windows_app_recommend/3.png" alt="enter description here">
你可以在 <a href="https://www.huorong.cn/">官网</a> 免费获取火绒安全软件。</p>
<h2 id="Quicklook，仿-MAC-快速预览">Quicklook，仿 MAC 快速预览</h2>
<p>MAC 的快速预览很多人都见过，回望 Win10 的「预览」，依旧被抠抠唆唆地安排在窗口右侧，一点也不大气！QuickLook 是一款仿 MAC 快速预览的小工具，装好之后，只要选中文件，按下键盘上的空格键，即可预览文件内容。</p>
<p>QuickLook 支持文本、视频、音频、图片、压缩包、Office 文档……，换句话说，你电脑上任何一款文件几乎都可以用它预览。同时你也可以点击预览窗右上角的按钮直接启动对应程序，非常方便。
<img src="../../media/article_img/windows_app_recommend/4.png" alt="enter description here">
<a href="http://dl.pconline.com.cn/download/1115319.html">QuickLook：点此下载</a></p>
<h2 id="升级-Win10-日历！优效日历">升级 Win10 日历！优效日历</h2>
<p>Win10 为右下角托盘设计了一个新日历，但依旧被吐槽功能太弱，优效日历是 Win10 原生日历的最佳替代者。它有着和 Win10 原生日历一致的外观界面，支持农历、节日、调休显示，支持日程提醒、万年历、自定义时钟。同时它还集成了定时关机、屏幕截图两大功能，没用过的一定得试一试！
<img src="../../media/article_img/windows_app_recommend/5.png" alt="enter description here">
<a href="http://www.youxiao.cn/">点击下载</a></p>
<h2 id="Chocolatey">Chocolatey</h2>
<p>Chocolatey 是 Windows 下的包管理器，访问<a href="https://chocolatey.org/">官网</a>来查看使用方法</p>
<h2 id="uTools">uTools</h2>
<p>uTools 是一个极简的桌面管理软件，但它的功能更全面。包含：快速启动、自动识别、数据同步等功能。</p>
<p>比如快速启动，这个功能和 Listary、Everything 等都非常相似。但 uTools 对中文的支持非常有好，还可以首字母检索。
<img src="../../media/article_img/windows_app_recommend/6.png" alt="enter description here">
除此外还有插件中心，里面还有各种比如：网页快开、在线翻译、计算器、压缩图片、图片转文字等功能。这也是其它快速启动软件所不具备的。
<img src="../../media/article_img/windows_app_recommend/7.png" alt="enter description here">
<a href="https://u.tools/">点击下载</a></p>
<h2 id="万彩办公大师">万彩办公大师</h2>
<p>万彩办公大师可以说是一个办公必备的工具，包含了各种功能：PDF 编辑、格式转换、图片编辑等，功能多达 60+。</p>
<p>最让人惊喜的是，万彩办公大师使用完全免费，所有的工具无需安装，直接加载就可以启动了。
<img src="../../media/article_img/windows_app_recommend/8.png" alt="enter description here">
<a href="wofficebox.com/">下载地址</a></p>
<h2 id="TreeSize">TreeSize</h2>
<p>TreeSize 是一个扫描磁盘可视化排列大小的应用，有免费版和专业版可以选
<img src="../../media/article_img/windows_app_recommend/9.png" alt="enter description here">
<a href="https://www.jam-software.com/treesize_free/">点击这里</a>获取免费版</p>
<h2 id="CCleaner">CCleaner</h2>
<p>CCleaner，不仅是常用的垃圾和缓存清理，我也用它在电脑刚到手时卸载掉 Win10 自带的各种无用软件（有些 Windows 不让卸载的自带 UWP，在 CCleaner 里可以卸载掉），甚至我嫌 OneDrive 麻烦，也用它卸载过。界面很友好。批量卸载比手动卸载方便不少。软件是有中文的，但默认是英文，自己手动在 <code>options-setting-language</code> 选择 <code>Chinese simplified</code> 即可
<img src="../../media/article_img/windows_app_recommend/10.png" alt="enter description here">
<a href="https://www.ccleaner.com/ccleaner/download">点击下载</a></p>
<h2 id="BandiZip">BandiZip</h2>
<p>BandiZip，界面美观，功能强大，而且免费无广告，另外 <a href="https://www.7-zip.org/">7-Zip</a>，界面丑了一些，功能还是很强的。也有不少人推荐修改版的 rar 烈火或者好压，其实都不错。
<img src="../../media/article_img/windows_app_recommend/11.png" alt="enter description here">
<a href="http://www.bandisoft.com/bandizip/cn/">下载地址</a></p>
<h2 id="Obs-Open-Broadcaster-Software">Obs-Open Broadcaster Software</h2>
<p>OBS，不用多说了，剪视频、录游戏好帮手。
<a href="https://obsproject.com/">下载地址</a></p>
<h2 id="VLC-media-player">VLC media player</h2>
<p>跨平台的播放器，Linux 的时候一直用的，Windows 也就接着用了，有浏览器插件，可以直接把浏览器的视频推过来播放
<img src="../../media/article_img/windows_app_recommend/12.png" alt="enter description here">
<a href="https://www.videolan.org/">点这里下载</a></p>
<h2 id="Geek-Uninstaller">Geek Uninstaller</h2>
<p>Geek Uninstaller 是一个专业卸载软件，采取深而快的扫描方式，删除所有无用的文件，注册表，卸载无残留！
这款软件也是一款单文件软件，下载后，不用安装，双击直接使用，卸载软件、强制彻底清除软件残留垃圾文件或是查看某软件的注册表项目等等。
<img src="../../media/article_img/windows_app_recommend/13.png" alt="enter description here">
你可以在他的<a href="https://geekuninstaller.com/">官网</a>获取到</p>
<h2 id="未完">未完</h2>
<p>后面想到了再补充</p>
]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>软件推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>在线游玩 FC（小霸王、红白机）、街机游戏</title>
    <url>/posts/743f9c80/</url>
    <content><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="../../media/article_img/online_play_nes/%E7%BD%91%E7%AB%99%E6%A0%87%E9%A2%98%E7%95%8C%E9%9D%A2.png" alt="网站标题界面"></p>
<p><a href="https://www.yikm.net/">点击这里访问 yikm 在线玩游戏</a></p>
<p>FC 游戏，或者说是国人更熟悉的「小霸王」，可以说承载了 80 后、90 后乃至 00 后共同的童年回忆 。</p>
<p>随着 PC 机的普及，国内的主机游戏渐渐成了小众爱好，而小霸王成为了这几代许多人对于「手柄游戏」的唯一认知。</p>
<p>在「小霸王」逐渐在家庭的客厅、玩家的桌面消失以后，很多人都在 PC 机上体验过各种各样的「FC 游戏模拟器」，但是繁杂的参数，无中文的交互界面成为了一种不大不小的阻碍。</p>
<p>而这次推荐的网站 <code>yikm</code> 就成了这些问题的终极解决方案，你只需要一个浏览器（无论是 PC 还是手机端），访问这个网站，就能在线玩到这些经典的像素风游戏。
贴心的在线联机功能</p>
<p>当那些曾在记忆里响起无数次的 8-bit 音乐响起，不知道你有没有想起儿时的那些玩伴，如今即使你们在物理距离上相隔很远，也可以通过网络很方便地一起怀念童年——只需要通过 yikm 提供的「联机大厅」功能。</p>
<p><img src="../../media/article_img/online_play_nes/%E8%81%94%E6%9C%BA.png" alt="联机"></p>
]]></content>
      <categories>
        <category>随手记</category>
      </categories>
      <tags>
        <tag>游戏推荐</tag>
        <tag>FC</tag>
      </tags>
  </entry>
</search>
